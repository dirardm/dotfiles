# This viminfo file was generated by Vim 9.1.
# You may edit it if you are careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~MSle0~/kana

# Last Substitute Search Pattern:
~MSle0&^" \a

# Last Substitute String:
$SHORT

# Command Line History (newest to oldest):
:x
|2,0,1761279829,,"x"
:.,$d
|2,0,1761279787,,".,$d"
:q
|2,0,1761277256,,"q"
:0
|2,0,1761277002,,"0"
:colorscheme dracula
|2,0,1761106063,,"colorscheme dracula"
:colorscheme catppuccin-mocha
|2,0,1761106051,,"colorscheme catppuccin-mocha"
:colorscheme nordfox
|2,0,1761024461,,"colorscheme nordfox"
:colorscheme catppuccin-frappe
|2,0,1761024431,,"colorscheme catppuccin-frappe"
:28
|2,0,1760961476,,"28"
:.
|2,0,1760961458,,"."
:colorscheme kanagawa
|2,0,1760878693,,"colorscheme kanagawa"
:colorscheme catppuccin-macchiato
|2,0,1760878681,,"colorscheme catppuccin-macchiato"
:colorscheme
|2,0,1760878667,,"colorscheme"
:68
|2,0,1760849476,,"68"
:PlugInstall vim-airline-themes
|2,0,1760849250,,"PlugInstall vim-airline-themes"
:PlugStatus
|2,0,1760849234,,"PlugStatus"
:PlugClean
|2,0,1760849223,,"PlugClean"
:PlugUpgrade
|2,0,1760849218,,"PlugUpgrade"
:PlugUpdate
|2,0,1760849210,,"PlugUpdate"
:AirlineRefresh
|2,0,1760849184,,"AirlineRefresh"
:AirlineTheme
|2,0,1760849154,,"AirlineTheme"
:w
|2,0,1760849114,,"w"
:PlugInstall
|2,0,1760849077,,"PlugInstall"
:colorscheme darkblue
|2,0,1760848604,,"colorscheme darkblue"
:colorscheme carbonfox
|2,0,1760848588,,"colorscheme carbonfox"
:G
|2,0,1760848537,,"G"
:q!
|2,0,1760848518,,"q!"
:colorscheme nightfox
|2,0,1760848465,,"colorscheme nightfox"
:colorscheme kanagawa-dragon
|2,0,1760848451,,"colorscheme kanagawa-dragon"
:colorscheme catppuccin-latte
|2,0,1760848401,,"colorscheme catppuccin-latte"
:colorscheme catppuccin
|2,0,1760848389,,"colorscheme catppuccin"
:PlugInstall nightfox.nvim
|2,0,1760848352,,"PlugInstall nightfox.nvim"
:PlugInstall kanagawa.nvim
|2,0,1760848342,,"PlugInstall kanagawa.nvim"
:PlugInstall catppuccin
|2,0,1760848336,,"PlugInstall catppuccin"
:colorscheme tokyonight
|2,0,1760848138,,"colorscheme tokyonight"
:PlugInstall tokyonight
|2,0,1760848129,,"PlugInstall tokyonight"
:PlugInstall updated
|2,0,1760848111,,"PlugInstall updated"
:colorscheme wildcharm
|2,0,1760847802,,"colorscheme wildcharm"
:colorscheme unokai
|2,0,1760847798,,"colorscheme unokai"
:colorscheme industry
|2,0,1760847772,,"colorscheme industry"
:'<,'>
|2,0,1760847302,,"'<,'>"
:.,.+6.,$d
|2,0,1760794304,,".,.+6.,$d"
:84
|2,0,1760693046,,"84"
:X
|2,0,1760682761,,"X"
:scriptnames
|2,0,1760606069,,"scriptnames"
:AirlineTheme material
|2,0,1760605399,,"AirlineTheme material"
:q1
|2,0,1760605033,,"q1"
:Q!
|2,0,1760605028,,"Q!"
:Q
|2,0,1760605026,,"Q"
:qQ
|2,0,1760600923,,"qQ"
:.,$fd
|2,0,1760596009,,".,$fd"
:8,32norm A,
|2,0,1760592409,,"8,32norm A,"
:version
|2,0,1760508183,,"version"
:AirlineTheme simple
|2,0,1760506004,,"AirlineTheme simple"
:AirlineTheme dark
|2,0,1760506000,,"AirlineTheme dark"
:AirlineTheme dracula
|2,0,1760505996,,"AirlineTheme dracula"
:AirlineTheme Dracula
|2,0,1760505992,,"AirlineTheme Dracula"
:NERDTree
|2,0,1760505546,,"NERDTree"
:PlugInstall nerdtree
|2,0,1760505515,,"PlugInstall nerdtree"
:FZF
|2,0,1760505430,,"FZF"
:fzf
|2,0,1760505425,,"fzf"
:AirlineTheme Material
|2,0,1760504817,,"AirlineTheme Material"
:AirlineTheme base16_material_vivid
|2,0,1760504786,,"AirlineTheme base16_material_vivid"
:AirlineTheme base16_material_darker
|2,0,1760504732,,"AirlineTheme base16_material_darker"
:AirlineTheme base16_material
|2,0,1760504726,,"AirlineTheme base16_material"
:AirlineTheme luna
|2,0,1760504703,,"AirlineTheme luna"
:AirlineTheme base16_material_palenight
|2,0,1760504642,,"AirlineTheme base16_material_palenight"
:AirlineTheme base16_material_lighter
|2,0,1760504602,,"AirlineTheme base16_material_lighter"
:PlugInstall vim-airline
|2,0,1760504114,,"PlugInstall vim-airline"
:PlugInstall material.vim
|2,0,1760503053,,"PlugInstall material.vim"
:messages
|2,0,1760502486,,"messages"
:0,$d
|2,0,1760421122,,"0,$d"
:set nu
|2,0,1760246062,,"set nu"
:colorscheme pablo
|2,0,1760245025,,"colorscheme pablo"
:colorscheme quiet
|2,0,1760245015,,"colorscheme quiet"
:colorscheme retrobox
|2,0,1760245006,,"colorscheme retrobox"
:colorscheme material
|2,0,1760244979,,"colorscheme material"
:colorscheme blue
|2,0,1760244956,,"colorscheme blue"
:colorscheme desertcharm
|2,0,1760244706,,"colorscheme desertcharm"
:set background
|2,0,1760244598,,"set background"
:colorscheme macvim
|2,0,1760244328,,"colorscheme macvim"
:colorscheme  material
|2,0,1760244206,,"colorscheme  material"
:vim
|2,0,1760243980,,"vim"
::q
|2,0,1760243288,,":q"
:%s/LONG/SHORT/gc
|2,0,1760070928,,"%s/LONG/SHORT/gc"
:8,22norm A,
|2,0,1760067957,,"8,22norm A,"
:128
|2,0,1759993619,,"128"
:110
|2,0,1759993281,,"110"
:%norm A, 8,3:2
|2,0,1759990646,,"%norm A, 8,3:2"
:%norm A, 8,32
|2,0,1759990595,,"%norm A, 8,32"
:8,32/A,
|2,0,1759990504,,"8,32/A,"
:8,32A,
|2,0,1759990498,,"8,32A,"
:8,32 A,
|2,0,1759990492,,"8,32 A,"
:8,32,A/$/.
|2,0,1759990440,,"8,32,A/$/."
:8,32/A/,$
|2,0,1759990415,,"8,32/A/,$"
:375
|2,0,1759846534,,"375"
:552
|2,0,1759846480,,"552"
:559
|2,0,1759827430,,"559"
:227
|2,0,1759827139,,"227"
:228
|2,0,1759826838,,"228"
:85
|2,0,1759823842,,"85"
:244
|2,0,1759823798,,"244"
:60
|2,0,1759823737,,"60"
:214
|2,0,1759823653,,"214"
:100
|2,0,1759823613,,"100"
:343
|2,0,1759568622,,"343"
:187
|2,0,1759568596,,"187"
:97
|2,0,1759568563,,"97"
:208
|2,0,1759567648,,"208"
:58
|2,0,1759566252,,"58"
:55
|2,0,1759566249,,"55"
:932
|2,0,1759482209,,"932"
:%s/rpm/spm/gc
|2,0,1759480187,,"%s/rpm/spm/gc"
:583
|2,0,1759394648,,"583"
:syntax on
|2,0,1759383670,,"syntax on"
:,$d
|2,0,1759300279,,",$d"
:.,$df
|2,0,1759299603,,".,$df"
:.,$f
|2,0,1759299601,,".,$f"
:14466,1526d
|2,0,1759062340,,"14466,1526d"
:1466,1526d
|2,0,1759062329,,"1466,1526d"
:15d
|2,0,1759056154,,"15d"
:.,20d
|2,0,1759055846,,".,20d"
:1254
|2,0,1759048361,,"1254"
:830
|2,0,1759048266,,"830"
:1329
|2,0,1759047832,,"1329"
:1339
|2,0,1759047813,,"1339"
:1111
|2,0,1759042063,,"1111"
:.,
|2,0,1759039207,,".,"
:1027
|2,0,1758974903,,"1027"
:890,980d
|2,0,1758953599,,"890,980d"
:901,953d
|2,0,1758953489,,"901,953d"
:142
|2,0,1758871421,,"142"
:290
|2,0,1758714184,,"290"
:869
|2,0,1758713951,,"869"
:840
|2,0,1758713904,,"840"
:1001
|2,0,1758711150,,"1001"
:.,300d
|2,0,1758533528,,".,300d"
:,300d
|2,0,1758533521,,",300d"
:700
|2,0,1758533508,,"700"
:24546
<import React, { useState, useMemo, useCallback } from 'react';nimport {n  Paper,n  Box,n  Typography,n  Grid,n  Card,n  CardContent,n  Divider,n  Tabs,n  Tab,n  FormControl,n  InputLabel,n  Select,n  MenuItem,n  TableContainer,n  Table,n  TableHead,n  TableBody,n  TableRow,n  TableCell,n  IconButton,n  Chip,n  Tooltip,n  Button,n  alpha,n  useTheme,n  Skeleton,n  Alert,n  Fade,n  Zoom,n  Dialog,n  DialogTitle,n  DialogContent,n  DialogActions,n  Slidern} from '@mui/material';nimport {n  Visibility,n  Refresh,n  CalendarToday,n  TrendingUp,n  DirectionsRun,n  Favorite,n  Speed as SpeedIcon,n  LocalFireDepartment,n  DirectionsWalk,n  AccessTime,n  ShowChart,n  Analytics,n  Closen} from '@mui/icons-material';nimport { DateRange } from 'react-date-range';nimport 'react-date-range/dist/styles.css';nimport 'react-date-range/dist/theme/default.css';nimport { format, subDays, startOfMonth, endOfMonth, subMonths } from 'date-fns';nimport { Sparklines, SparklinesBars } from 'react-sparklines';nnimport { useFilters } from '../contexts/FilterContext';nimport WorkoutDetailModal from './WorkoutDetailModal';nimport { convertDurationToMinutes } from '../utils/csvParser';nn/*---------------- Predefined Date Ranges ----------------*/nconst predefinedRanges = [n  {n    label: 'Last 7 Days',n    value: 'last7days',n    getRange: () => ({n      startDate: format(subDays(new Date(), 6), 'yyyy-MM-dd'),n      endDate: format(new Date(), 'yyyy-MM-dd'),n    }),n  },n  {n    label: 'Last 30 Days',n    value: 'last30days',n    getRange: () => ({n      startDate: format(subDays(new Date(), 29), 'yyyy-MM-dd'),n      endDate: format(new Date(), 'yyyy-MM-dd'),n    }),n  },n  {n    label: 'This Month',n    value: 'thisMonth',n    getRange: () => {n      const now = new Date();n      return { startDate: format(startOfMonth(now), 'yyyy-MM-dd'), endDate: format(endOfMonth(now), 'yyyy-MM-dd') };n    },n  },n  {n    label: 'Last Month',n    value: 'lastMonth',n    getRange: () => {n      const now = new Date();n      const firstDayLastMonth = startOfMonth(subMonths(now, 1));n      const lastDayLastMonth = endOfMonth(subMonths(now, 1));n      return { startDate: format(firstDayLastMonth, 'yyyy-MM-dd'), endDate: format(lastDayLastMonth, 'yyyy-MM-dd') };n    },n  },n];nnconst hrZoneColors = ['#4A90E2', '#50E3C2', '#F5A623', '#F8E71C', '#D0021B'];nn/*---------------- Helper Functions ----------------*/nconst formatDateRange = (start, end) =>n  start && end ? `${format(new Date(start), 'MMM d, yyyy')} - ${format(new Date(end), 'MMM d, yyyy')}` : 'Select Date Range';nnconst extractHRData = (workout) => {n  const hrData = [];n  if (workout.avgHR) hrData.push(Number(workout.avgHR));n  if (workout.maxHR) hrData.push(Number(workout.maxHR));n  if (workout.minHR) hrData.push(Number(workout.minHR));n  n  if (workout.segments && workout.segments.length) {n    workout.segments.forEach(segment => {n      if (segment['HR Start (bpm)']) hrData.push(Number(segment['HR Start (bpm)']));n      if (segment['HR Peak (bpm)']) hrData.push(Number(segment['HR Peak (bpm)']));n      if (segment['HR End (bpm)']) hrData.push(Number(segment['HR End (bpm)']));n      if (segment.avgHR) hrData.push(Number(segment.avgHR));n    });n  }n  n  return hrData.filter(hr => hr > 0 && hr < 250);n};nnconst calculateHRZones = (hrData) => {n  const zones = { z1: 0, z2: 0, z3: 0, z4: 0, z5: 0 };n  n  hrData.forEach(hr => {n    if (hr <= 97) zones.z1++;n    else if (hr <= 113) zones.z2++;n    else if (hr <= 129) zones.z3++;n    else if (hr <= 145) zones.z4++;n    else zones.z5++;n  });n  n  const total = hrData.length;n  if (total === 0) return { percentages: { z1: 0, z2: 0, z3: 0, z4: 0, z5: 0 }, zones };n  n  return {n    percentages: {n      z1: Number((zones.z1 / total * 100).toFixed(0)),n      z2: Number((zones.z2 / total * 100).toFixed(0)),n      z3: Number((zones.z3 / total * 100).toFixed(0)),n      z4: Number((zones.z4 / total * 100).toFixed(0)),n      z5: Number((zones.z5 / total * 100).toFixed(0)),n    },n    zonesn  };n};nnconst normalizeZonePercent = (val) => {n  if (val == null || val === '') return 0;n  if (typeof val === 'string') {n    const cleaned = val.replace('%', '').trim();n    const asNum = Number(cleaned);n    if (!Number.isNaN(asNum)) return asNum > 0 && asNum <= 1 ? Math.round(asNum * 100) : Math.round(asNum);n    return 0;n  }n  const n = Number(val);n  if (Number.isNaN(n)) return 0;n  return n > 0 && n <= 1 ? Math.round(n * 100) : Math.round(n);n};nnconst getHRZoneDistribution = (workout, hrData = []) => {n  const csvFields = [workout.zone1, workout.zone2, workout.zone3, workout.zone4, workout.zone5];n  const hasCsvZones = csvFields.some(v => v != null && v !== '' && !Number.isNaN(Number(String(v).replace('%','').trim())));nn  if (hasCsvZones) {n    const p = {n      z1: normalizeZonePercent(workout.zone1),n      z2: normalizeZonePercent(workout.zone2),n      z3: normalizeZonePercent(workout.zone3),n      z4: normalizeZonePercent(workout.zone4),n      z5: normalizeZonePercent(workout.zone5)n    };nn    const sum = p.z1 + p.z2 + p.z3 + p.z4 + p.z5;n    if (sum !== 100 && sum > 0) {n      const scale = 100 / sum;n      p.z1 = Math.round(p.z1 * scale);n      p.z2 = Math.round(p.z2 * scale);n      p.z3 = Math.round(p.z3 * scale);n      p.z4 = Math.round(p.z4 * scale);n      p.z5 = Math.round(p.z5 * scale);nn      let adjustedSum = p.z1 + p.z2 + p.z3 + p.z4 + p.z5;n      if (adjustedSum !== 100) {n        const diff = 100 - adjustedSum;n        const maxKey = Object.keys(p).reduce((a, b) => (p[a] > p[b] ? a : b));n        p[maxKey] += diff;n      }n    }nn    const totalSamples = hrData.length || 100;n    const zones = {n      z1: Math.round((p.z1 / 100) * totalSamples),n      z2: Math.round((p.z2 / 100) * totalSamples),n      z3: Math.round((p.z3 / 100) * totalSamples),n      z4: Math.round((p.z4 / 100) * totalSamples),n      z5: Math.round((p.z5 / 100) * totalSamples),n    };nn    return {n      percentages: p,n      zonesn    };n  }nn  const fallback = calculateHRZones(hrData);n  return {n    percentages: {n      z1: Number(fallback.percentages.z1) || 0,n      z2: Number(fallback.percentages.z2) || 0,n      z3: Number(fallback.percentages.z3) || 0,n      z4: Number(fallback.percentages.z4) || 0,n      z5: Number(fallback.percentages.z5) || 0,n    },n    zones: fallback.zonesn  };n};nn/*---------------- Stat Card ----------------*/nconst StatCard = ({ title, value, icon, color = 'primary', loading, subtext }) => {n  const theme = useTheme();n  const shadowColor = theme.palette[color] ? alpha(theme.palette[color].main, 0.2) : 'rgba(0,0,0,0.1)';n  const borderColor = theme.palette[color] ? alpha(theme.palette[color].main, 0.2) : theme.palette.divider;n  const iconBg = theme.palette[color] ? alpha(theme.palette[color].main, 0.1) : 'rgba(0,0,0,0.05)';n  const valueColor = theme.palette[color] ? theme.palette[color].main : theme.palette.text.primary;nn  if (loading) return <Skeleton variant="rectangular" height={120} sx={{ borderRadius: 2 }} />;nn  return (n    <Zoom in={true} style={{ transitionDelay: '100ms' }}>n      <Cardn        sx={{n          height: 120,n          display: 'flex',n          flexDirection: 'column',n          justifyContent: 'center',n          alignItems: 'center',n          borderRadius: 2,n          border: `1px solid ${borderColor}`,n          boxShadow: `0 0 12px ${shadowColor}`,n          transition: 'all 0.3s ease',n          '&:hover': {n            transform: 'translateY(-4px)',n            boxShadow: `0 8px 24px ${shadowColor}`,n            border: `1px solid ${alpha(theme.palette[color].main, 0.4)}`,n          },n          bgcolor: theme.palette.background.paper,n        }}n      >n        <CardContent sx={{ p: 1.5, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>n            <Box sx={{n              color: valueColor,n              mr: 1,n              background: iconBg,n              borderRadius: '50%',n              p: 0.5,n              display: 'flex',n              alignItems: 'center',n              justifyContent: 'center',n            }}>n              {icon}n            </Box>n            <Typography variant="body2" color="text.secondary" fontWeight="medium">n              {title}n            </Typography>n          </Box>n          <Typography variant="h5" component="div" color={valueColor} fontWeight="bold" sx={{ mb: 0.5 }}>n            {value}n          </Typography>n          {subtext && (n            <Typography variant="caption" color="text.secondary">n              {subtext}n            </Typography>n          )}n        </CardContent>n      </Card>n    </Zoom>n  );n};nn/*---------------- Advanced Filters Component ----------------*/nconst AdvancedFilters = ({ open, onClose }) => {n  const { filters, setFilters } = useFilters();n  const theme = useTheme();nn  const handleSliderChange = (key, event, newValue) => {n    if (Array.isArray(newValue)) {n      setFilters({n        [`min${key}`]: newValue[0],n        [`max${key}`]: newValue[1]n      });n    }n  };nn  const handleSelectChange = (key, event) => {n    setFilters({ [key]: event.target.value });n  };n  n  const handleClearFilters = () => {n    setFilters({n      minDistance: 0,n      maxDistance: 20,n      minDuration: 0,n      maxDuration: 120,n      minAvgHR: 0,n      maxAvgHR: 200,n      minCalories: 0,n      maxCalories: 1000,n      minAvgSpeed: 0,n      maxAvgSpeed: 20,n      dominantHRZone: 'any'n    });n  };nn  return (n    <Dialogn      open={open}n      onClose={onClose}n      maxWidth="md"n      fullWidthn      PaperProps={{n        sx: {n          borderRadius: 2,n          boxShadow: '0 10px 40px rgba(0,0,0,0.2)',n          bgcolor: 'background.paper'n        }n      }}n    >n      <DialogTitle sx={{n        display: 'flex',n        justifyContent: 'space-between',n        alignItems: 'center',n        borderBottom: `1px solid ${alpha(theme.palette.divider, 0.1)}`,n        pb: 2n      }}>n        <Typography variant="h6" fontWeight="bold">n          Advanced Filtersn        </Typography>n        <IconButton onClick={onClose} size="small">n          <Close />n        </IconButton>n      </DialogTitle>n      n      <DialogContent sx={{ pt: 3 }}>n        <Grid container spacing={3}>n          <Grid item xs={12} md={6}>n            <Typography gutterBottom variant="body2">Distance (km)</Typography>n            <Slidern              value={[filters.minDistance || 0, filters.maxDistance || 20]}n              onChange={(event, newValue) => handleSliderChange('Distance', event, newValue)}n              valueLabelDisplay="auto"n              min={0}n              max={20}n              step={0.1}n              valueLabelFormat={(value) => `${value} km`}n            />n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>n              <Typography variant="caption">{filters.minDistance || 0} km</Typography>n              <Typography variant="caption">{filters.maxDistance || 20} km</Typography>n            </Box>n          </Grid>nn          <Grid item xs={12} md={6}>n            <Typography gutterBottom variant="body2">Duration (minutes)</Typography>n            <Slidern              value={[filters.minDuration || 0, filters.maxDuration || 120]}n              onChange={(event, newValue) => handleSliderChange('Duration', event, newValue)}n              valueLabelDisplay="auto"n              min={0}n              max={120}n              step={1}n              valueLabelFormat={(value) => `${value} min`}n            />n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>n              <Typography variant="caption">{filters.minDuration || 0} min</Typography>n              <Typography variant="caption">{filters.maxDuration || 120} min</Typography>n            </Box>n          </Grid>nn          <Grid item xs={12} md={6}>n            <Typography gutterBottom variant="body2">Avg Heart Rate (bpm)</Typography>n            <Slidern              value={[filters.minAvgHR || 0, filters.maxAvgHR || 200]}n              onChange={(event, newValue) => handleSliderChange('AvgHR', event, newValue)}n              valueLabelDisplay="auto"n              min={0}n              max={200}n              step={1}n              valueLabelFormat={(value) => `${value} bpm`}n            />n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>n              <Typography variant="caption">{filters.minAvgHR || 0} bpm</Typography>n              <Typography variant="caption">{filters.maxAvgHR || 200} bpm</Typography>n            </Box>n          </Grid>nn          <Grid item xs={12} md={6}>n            <Typography gutterBottom variant="body2">Calories</Typography>n            <Slidern              value={[filters.minCalories || 0, filters.maxCalories || 1000]}n              onChange={(event, newValue) => handleSliderChange('Calories', event, newValue)}n              valueLabelDisplay="auto"n              min={0}n              max={1000}n              step={10}n              valueLabelFormat={(value) => `${value} cal`}n            />n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>n              <Typography variant="caption">{filters.minCalories || 0} cal</Typography>n              <Typography variant="caption">{filters.maxCalories || 1000} cal</Typography>n            </Box>n          </Grid>nn          <Grid item xs={12} md={6}>n            <Typography gutterBottom variant="body2">Avg Speed (km/h)</Typography>n            <Slidern              value={[filters.minAvgSpeed || 0, filters.maxAvgSpeed || 20]}n              onChange={(event, newValue) => handleSliderChange('AvgSpeed', event, newValue)}n              valueLabelDisplay="auto"n              min={0}n              max={20}n              step={0.1}n              valueLabelFormat={(value) => `${value} km/h`}n            />n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>n              <Typography variant="caption">{filters.minAvgSpeed || 0} km/h</Typography>n              <Typography variant="caption">{filters.maxAvgSpeed || 20} km/h</Typography>n            </Box>n          </Grid>nn          <Grid item xs={12} md={6}>n            <FormControl fullWidth size="small">n              <InputLabel>Dominant HR Zone</InputLabel>n              <Selectn                value={filters.dominantHRZone || 'any'}n                label="Dominant HR Zone"n                onChange={(e) => handleSelectChange('dominantHRZone', e)}n              >n                <MenuItem value="any">Any Zone</MenuItem>n                <MenuItem value="z1">Zone 1 (Recovery)</MenuItem>n                <MenuItem value="z2">Zone 2 (Aerobic)</MenuItem>n                <MenuItem value="z3">Zone 3 (Tempo)</MenuItem>n                <MenuItem value="z4">Zone 4 (Threshold)</MenuItem>n                <MenuItem value="z5">Zone 5 (Maximum)</MenuItem>n              </Select>n            </FormControl>n          </Grid>n        </Grid>n      </DialogContent>n      n      <DialogActions sx={{ px: 3, pb: 3, borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`, pt: 2 }}>n        <Button onClick={handleClearFilters} color="secondary">n          Clear Alln        </Button>n        <Button onClick={onClose} variant="contained">n          Apply Filtersn        </Button>n      </DialogActions>n    </Dialog>n  );n};nn/*---------------- Filter Section ----------------*/nconst FilterSection = ({ workoutDays }) => {n  const [showDatePicker, setShowDatePicker] = useState(false);n  const { filters, setFilters } = useFilters();n  const theme = useTheme();nn  // Initialize with a default range if not setn  const selectionRange = {n    startDate: filters.startDate ? new Date(filters.startDate) : subDays(new Date(), 30),n    endDate: filters.endDate ? new Date(filters.endDate) : new Date(),n    key: 'selection',n  };nn  const handleSelect = (ranges) => {n    const { selection } = ranges;n    setFilters({ n      startDate: format(selection.startDate, 'yyyy-MM-dd'), n      endDate: format(selection.endDate, 'yyyy-MM-dd'),n      dateRange: 'custom'n    });n  };nn  const applyPredefinedRange = (range) => {n    const { startDate, endDate } = range.getRange();n    setFilters({ n      dateRange: range.value, n      startDate, n      endDate n    });n    setShowDatePicker(false);n  };nn  const getActiveTabValue = () => {n    if (filters.dateRange === 'all') return 'all';n    if (filters.dateRange === 'custom') return 'custom';n    for (const range of predefinedRanges) {n      if (filters.dateRange === range.value) return range.value;n    }n    return 'all';n  };nn  const handleFilterChange = (key, value) => {n    setFilters({ [key]: value });n  };nn  const handleTabChange = (e, value) => {n    if (value === 'all') {n      setFilters({ dateRange: 'all', startDate: null, endDate: null });n    } else if (value === 'custom') {n      setFilters({ dateRange: 'custom' });n      setShowDatePicker(true);n    } else {n      const range = predefinedRanges.find((r) => r.value === value);n      if (range) applyPredefinedRange(range);n    }n  };nn  return (n    <Box sx={{ mb: 3 }}>n      <Tabsn        value={getActiveTabValue()}n        onChange={handleTabChange}n        sx={{n          mb: 2,n          '& .MuiTab-root': {n            fontWeight: 500,n            fontSize: '0.9rem',n            minHeight: 48,n          },n          '& .Mui-selected': {n            color: theme.palette.primary.main,n            fontWeight: 600,n          }n        }}n      >n        <Tab value="all" label="All Dates" />n        <Tab value="custom" label="Custom Range" />n        {predefinedRanges.map((range) => (n          <Tab key={range.value} value={range.value} label={range.label} />n        ))}n      </Tabs>nn      {filters.dateRange === 'custom' && (n        <Box sx={{ mb: 2 }}>n          <Buttonn            variant="outlined"n            startIcon={<CalendarToday />}n            onClick={() => setShowDatePicker(!showDatePicker)}n            sx={{n              borderRadius: 2,n              borderWidth: 2,n              '&:hover': {n                borderWidth: 2,n              }n            }}n          >n            {formatDateRange(filters.startDate, filters.endDate)}n          </Button>n          n          <Dialogn            open={showDatePicker}n            onClose={() => setShowDatePicker(false)}n            PaperProps={{ n              sx: { n                borderRadius: 2, n                boxShadow: '0 10px 40px rgba(0,0,0,0.2)',n                bgcolor: 'background.paper'n              } n            }}n          >n            <DialogTitle sx={{ pb: 1 }}>Select Date Range</DialogTitle>n            <DialogContent sx={{ p: 0 }}>n              <DateRangen                ranges={[selectionRange]}n                onChange={handleSelect}n                months={2}n                direction="horizontal"n                showMonthAndYearPickersn                rangeColors={[theme.palette.primary.main]}n              />n            </DialogContent>n            <DialogActions sx={{ pt: 0, px: 2, pb: 2 }}>n              <Button n                onClick={() => setShowDatePicker(false)}n                variant="contained"n              >n                Donen              </Button>n            </DialogActions>n          </Dialog>n        </Box>n      )}nn      <FormControl fullWidth size="small">n        <InputLabel>Workout Day</InputLabel>n        <Selectn          value={filters.workoutDay || 'all'}n          label="Workout Day"n          onChange={(e) => handleFilterChange('workoutDay', e.target.value)}n          sx={{ borderRadius: 2 }}n        >n          <MenuItem value="all">All Days</MenuItem>n          {workoutDays.map((day) => (n            <MenuItem key={day} value={day}>{day}</MenuItem>n          ))}n        </Select>n      </FormControl>n    </Box>n  );n};nn/*---------------- Workout Table ----------------*/nconst WorkoutTable = ({ workouts, onRowClick }) => {n  const theme = useTheme();n  if (!workouts || workouts.length === 0)n    return (n      <Fade in={true}>n        <Alert severity="info" sx={{ mt: 2, borderRadius: 2, boxShadow: 1 }}>n          No workouts match the selected filters.n        </Alert>n      </Fade>n    );nn  return (n    <TableContainer sx={{n      maxHeight: 440,n      borderRadius: 2,n      border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,n      boxShadow: '0 4px 24px rgba(0,0,0,0.05)',n      background: theme.palette.background.paper,n      overflow: 'auto'n    }}>n      <Table stickyHeader aria-label="workout summary table">n        <TableHead>n          <TableRow>n            {['Date', 'Duration', 'Distance (km)', 'Avg Speed', 'Calories', 'Avg HR', 'Avg Cadence', 'HR Zones', 'Type', 'Actions'].map((header) => (n              <TableCelln                key={header}n                sx={{n                  fontWeight: 'bold',n                  bgcolor: theme.palette.mode === 'dark'n                    ? alpha(theme.palette.primary.dark, 0.3)n                    : alpha(theme.palette.primary.main, 0.05),n                  color: 'primary.main',n                  py: 1.5,n                  borderBottom: `2px solid ${alpha(theme.palette.primary.main, 0.2)}`n                }}n              >n                {header}n              </TableCell>n            ))}n          </TableRow>n        </TableHead>n        <TableBody>n          {workouts.map((workout) => {n            const hrData = extractHRData(workout);n            const hrZones = getHRZoneDistribution(workout, hrData);n            const hasZones = Object.values(hrZones.percentages).some(p => p > 0);n            n            return (n              <Fade in={true} key={workout.date}>n                <TableRown                  hovern                  sx={{n                    '&:hover': {n                      bgcolor: alpha(theme.palette.primary.main, 0.03),n                      transform: 'scale(1.002)',n                      transition: 'all 0.2s ease'n                    },n                    '&:last-child td': { border: 0 }n                  }}n                >n                  <TableCell sx={{ fontWeight: 'medium', py: 1.5 }}>n                    {workout.date}n                  </TableCell>n                  <TableCell>{workout.duration}</TableCell>n                  <TableCell>{workout.distance?.toFixed(2)}</TableCell>n                  <TableCell>{workout.avgSpeed} km/h</TableCell>n                  <TableCell>{workout.calories}</TableCell>n                  <TableCell sx={{ fontWeight: 'medium' }}>{workout.avgHR} bpm</TableCell>n                  <TableCell>n                    {Number.isFinite(workout.avgCadence) ? `${workout.avgCadence} spm` : '-'}n                  </TableCell>n                  n                  {/* HR Zones Column - Corrected Colors and null handling */}n                  <TableCell>n                    {hasZones ? (n                      <Tooltipn                        title={n                          <Box>n                            <div>Zone 1 (Recovery): {hrZones.percentages.z1}%</div>n                            <div>Zone 2 (Aerobic): {hrZones.percentages.z2}%</div>n                            <div>Zone 3 (Tempo): {hrZones.percentages.z3}%</div>n                            <div>Zone 4 (Threshold): {hrZones.percentages.z4}%</div>n                            <div>Zone 5 (Max): {hrZones.percentages.z5}%</div>n                          </Box>n                        }n                        arrown                        placement="top"n                      >n                        <Box sx={{ width: 60, height: 20, display: 'flex' }}>n                            <Box sx={{ width: `${hrZones.percentages.z1}%`, bgcolor: hr:q:
|2,0,1758533290,,>24657
|<"import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  Paper,\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Divider,\n  Tabs,\n  Tab,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n  Chip,\n  Tooltip,\n  Button,\n  alpha,\n  useTheme,\n  Skeleton,\n  Alert,\n  Fade,\n  Zoom,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Slide
|<r\n} from '@mui/material';\nimport {\n  Visibility,\n  Refresh,\n  CalendarToday,\n  TrendingUp,\n  DirectionsRun,\n  Favorite,\n  Speed as SpeedIcon,\n  LocalFireDepartment,\n  DirectionsWalk,\n  AccessTime,\n  ShowChart,\n  Analytics,\n  Close\n} from '@mui/icons-material';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { format, subDays, startOfMonth, endOfMonth, subMonths } from '
|<date-fns';\nimport { Sparklines, SparklinesBars } from 'react-sparklines';\n\nimport { useFilters } from '../contexts/FilterContext';\nimport WorkoutDetailModal from './WorkoutDetailModal';\nimport { convertDurationToMinutes } from '../utils/csvParser';\n\n/*---------------- Predefined Date Ranges ----------------*/\nconst predefinedRanges = [\n  {\n    label: 'Last 7 Days',\n    value: 'last7days',\n    getRange: () => ({\n      startDate: format(subDays(new Date(), 6), 'yyyy-MM-dd'),
|<\n      endDate: format(new Date(), 'yyyy-MM-dd'),\n    }),\n  },\n  {\n    label: 'Last 30 Days',\n    value: 'last30days',\n    getRange: () => ({\n      startDate: format(subDays(new Date(), 29), 'yyyy-MM-dd'),\n      endDate: format(new Date(), 'yyyy-MM-dd'),\n    }),\n  },\n  {\n    label: 'This Month',\n    value: 'thisMonth',\n    getRange: () => {\n      const now = new Date();\n      return { startDate: format(startOfMonth(now), 'yyyy-MM-dd'), endDate: format(endOfMonth(now), 
|<'yyyy-MM-dd') };\n    },\n  },\n  {\n    label: 'Last Month',\n    value: 'lastMonth',\n    getRange: () => {\n      const now = new Date();\n      const firstDayLastMonth = startOfMonth(subMonths(now, 1));\n      const lastDayLastMonth = endOfMonth(subMonths(now, 1));\n      return { startDate: format(firstDayLastMonth, 'yyyy-MM-dd'), endDate: format(lastDayLastMonth, 'yyyy-MM-dd') };\n    },\n  },\n];\n\nconst hrZoneColors = ['#4A90E2', '#50E3C2', '#F5A623', '#F8E71C', '#D0021B'];\n\n
|</*---------------- Helper Functions ----------------*/\nconst formatDateRange = (start, end) =>\n  start && end ? `${format(new Date(start), 'MMM d, yyyy')} - ${format(new Date(end), 'MMM d, yyyy')}` : 'Select Date Range';\n\nconst extractHRData = (workout) => {\n  const hrData = [];\n  if (workout.avgHR) hrData.push(Number(workout.avgHR));\n  if (workout.maxHR) hrData.push(Number(workout.maxHR));\n  if (workout.minHR) hrData.push(Number(workout.minHR));\n  \n  if (workout.segments && 
|<workout.segments.length) {\n    workout.segments.forEach(segment => {\n      if (segment['HR Start (bpm)']) hrData.push(Number(segment['HR Start (bpm)']));\n      if (segment['HR Peak (bpm)']) hrData.push(Number(segment['HR Peak (bpm)']));\n      if (segment['HR End (bpm)']) hrData.push(Number(segment['HR End (bpm)']));\n      if (segment.avgHR) hrData.push(Number(segment.avgHR));\n    });\n  }\n  \n  return hrData.filter(hr => hr > 0 && hr < 250);\n};\n\nconst calculateHRZones = (hrDa
|<ta) => {\n  const zones = { z1: 0, z2: 0, z3: 0, z4: 0, z5: 0 };\n  \n  hrData.forEach(hr => {\n    if (hr <= 97) zones.z1++;\n    else if (hr <= 113) zones.z2++;\n    else if (hr <= 129) zones.z3++;\n    else if (hr <= 145) zones.z4++;\n    else zones.z5++;\n  });\n  \n  const total = hrData.length;\n  if (total === 0) return { percentages: { z1: 0, z2: 0, z3: 0, z4: 0, z5: 0 }, zones };\n  \n  return {\n    percentages: {\n      z1: Number((zones.z1 / total * 100).toFixed(0)),\n     
|< z2: Number((zones.z2 / total * 100).toFixed(0)),\n      z3: Number((zones.z3 / total * 100).toFixed(0)),\n      z4: Number((zones.z4 / total * 100).toFixed(0)),\n      z5: Number((zones.z5 / total * 100).toFixed(0)),\n    },\n    zones\n  };\n};\n\nconst normalizeZonePercent = (val) => {\n  if (val == null || val === '') return 0;\n  if (typeof val === 'string') {\n    const cleaned = val.replace('%', '').trim();\n    const asNum = Number(cleaned);\n    if (!Number.isNaN(asNum)) retur
|<n asNum > 0 && asNum <= 1 ? Math.round(asNum * 100) : Math.round(asNum);\n    return 0;\n  }\n  const n = Number(val);\n  if (Number.isNaN(n)) return 0;\n  return n > 0 && n <= 1 ? Math.round(n * 100) : Math.round(n);\n};\n\nconst getHRZoneDistribution = (workout, hrData = []) => {\n  const csvFields = [workout.zone1, workout.zone2, workout.zone3, workout.zone4, workout.zone5];\n  const hasCsvZones = csvFields.some(v => v != null && v !== '' && !Number.isNaN(Number(String(v).replace('%
|<','').trim())));\n\n  if (hasCsvZones) {\n    const p = {\n      z1: normalizeZonePercent(workout.zone1),\n      z2: normalizeZonePercent(workout.zone2),\n      z3: normalizeZonePercent(workout.zone3),\n      z4: normalizeZonePercent(workout.zone4),\n      z5: normalizeZonePercent(workout.zone5)\n    };\n\n    const sum = p.z1 + p.z2 + p.z3 + p.z4 + p.z5;\n    if (sum !== 100 && sum > 0) {\n      const scale = 100 / sum;\n      p.z1 = Math.round(p.z1 * scale);\n      p.z2 = Math.round(
|<p.z2 * scale);\n      p.z3 = Math.round(p.z3 * scale);\n      p.z4 = Math.round(p.z4 * scale);\n      p.z5 = Math.round(p.z5 * scale);\n\n      let adjustedSum = p.z1 + p.z2 + p.z3 + p.z4 + p.z5;\n      if (adjustedSum !== 100) {\n        const diff = 100 - adjustedSum;\n        const maxKey = Object.keys(p).reduce((a, b) => (p[a] > p[b] ? a : b));\n        p[maxKey] += diff;\n      }\n    }\n\n    const totalSamples = hrData.length || 100;\n    const zones = {\n      z1: Math.round((p
|<.z1 / 100) * totalSamples),\n      z2: Math.round((p.z2 / 100) * totalSamples),\n      z3: Math.round((p.z3 / 100) * totalSamples),\n      z4: Math.round((p.z4 / 100) * totalSamples),\n      z5: Math.round((p.z5 / 100) * totalSamples),\n    };\n\n    return {\n      percentages: p,\n      zones\n    };\n  }\n\n  const fallback = calculateHRZones(hrData);\n  return {\n    percentages: {\n      z1: Number(fallback.percentages.z1) || 0,\n      z2: Number(fallback.percentages.z2) || 0,\n  
|<    z3: Number(fallback.percentages.z3) || 0,\n      z4: Number(fallback.percentages.z4) || 0,\n      z5: Number(fallback.percentages.z5) || 0,\n    },\n    zones: fallback.zones\n  };\n};\n\n/*---------------- Stat Card ----------------*/\nconst StatCard = ({ title, value, icon, color = 'primary', loading, subtext }) => {\n  const theme = useTheme();\n  const shadowColor = theme.palette[color] ? alpha(theme.palette[color].main, 0.2) : 'rgba(0,0,0,0.1)';\n  const borderColor = theme.pa
|<lette[color] ? alpha(theme.palette[color].main, 0.2) : theme.palette.divider;\n  const iconBg = theme.palette[color] ? alpha(theme.palette[color].main, 0.1) : 'rgba(0,0,0,0.05)';\n  const valueColor = theme.palette[color] ? theme.palette[color].main : theme.palette.text.primary;\n\n  if (loading) return <Skeleton variant=\"rectangular\" height={120} sx={{ borderRadius: 2 }} />;\n\n  return (\n    <Zoom in={true} style={{ transitionDelay: '100ms' }}>\n      <Card\n        sx={{\n       
|<   height: 120,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: 2,\n          border: `1px solid ${borderColor}`,\n          boxShadow: `0 0 12px ${shadowColor}`,\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            transform: 'translateY(-4px)',\n            boxShadow: `0 8px 24px ${shadowColor}`,\n            border: `1px solid ${alpha(theme.palette[c
|<olor].main, 0.4)}`,\n          },\n          bgcolor: theme.palette.background.paper,\n        }}\n      >\n        <CardContent sx={{ p: 1.5, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>\n            <Box sx={{\n              color: valueColor,\n              mr: 1,\n              background: iconBg,\n              borderRadius: '50%',\n              p: 0.5,\n              display: 'flex',\n
|<              alignItems: 'center',\n              justifyContent: 'center',\n            }}>\n              {icon}\n            </Box>\n            <Typography variant=\"body2\" color=\"text.secondary\" fontWeight=\"medium\">\n              {title}\n            </Typography>\n          </Box>\n          <Typography variant=\"h5\" component=\"div\" color={valueColor} fontWeight=\"bold\" sx={{ mb: 0.5 }}>\n            {value}\n          </Typography>\n          {subtext && (\n          
|<  <Typography variant=\"caption\" color=\"text.secondary\">\n              {subtext}\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </Zoom>\n  );\n};\n\n/*---------------- Advanced Filters Component ----------------*/\nconst AdvancedFilters = ({ open, onClose }) => {\n  const { filters, setFilters } = useFilters();\n  const theme = useTheme();\n\n  const handleSliderChange = (key, event, newValue) => {\n    if (Array.isArray(newValue)) {\n      set
|<Filters({\n        [`min${key}`]: newValue[0],\n        [`max${key}`]: newValue[1]\n      });\n    }\n  };\n\n  const handleSelectChange = (key, event) => {\n    setFilters({ [key]: event.target.value });\n  };\n  \n  const handleClearFilters = () => {\n    setFilters({\n      minDistance: 0,\n      maxDistance: 20,\n      minDuration: 0,\n      maxDuration: 120,\n      minAvgHR: 0,\n      maxAvgHR: 200,\n      minCalories: 0,\n      maxCalories: 1000,\n      minAvgSpeed: 0,\n      max
|<AvgSpeed: 20,\n      dominantHRZone: 'any'\n    });\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"md\"\n      fullWidth\n      PaperProps={{\n        sx: {\n          borderRadius: 2,\n          boxShadow: '0 10px 40px rgba(0,0,0,0.2)',\n          bgcolor: 'background.paper'\n        }\n      }}\n    >\n      <DialogTitle sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        bor
|<derBottom: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n        pb: 2\n      }}>\n        <Typography variant=\"h6\" fontWeight=\"bold\">\n          Advanced Filters\n        </Typography>\n        <IconButton onClick={onClose} size=\"small\">\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      \n      <DialogContent sx={{ pt: 3 }}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Typography gutterBottom variant=\"body
|<2\">Distance (km)</Typography>\n            <Slider\n              value={[filters.minDistance || 0, filters.maxDistance || 20]}\n              onChange={(event, newValue) => handleSliderChange('Distance', event, newValue)}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={20}\n              step={0.1}\n              valueLabelFormat={(value) => `${value} km`}\n            />\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt
|<: -1 }}>\n              <Typography variant=\"caption\">{filters.minDistance || 0} km</Typography>\n              <Typography variant=\"caption\">{filters.maxDistance || 20} km</Typography>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Typography gutterBottom variant=\"body2\">Duration (minutes)</Typography>\n            <Slider\n              value={[filters.minDuration || 0, filters.maxDuration || 120]}\n              onChange={(event, n
|<ewValue) => handleSliderChange('Duration', event, newValue)}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={120}\n              step={1}\n              valueLabelFormat={(value) => `${value} min`}\n            />\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>\n              <Typography variant=\"caption\">{filters.minDuration || 0} min</Typography>\n              <Typography variant=\"caption\">{filters.maxDura
|<tion || 120} min</Typography>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Typography gutterBottom variant=\"body2\">Avg Heart Rate (bpm)</Typography>\n            <Slider\n              value={[filters.minAvgHR || 0, filters.maxAvgHR || 200]}\n              onChange={(event, newValue) => handleSliderChange('AvgHR', event, newValue)}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={200}\n              s
|<tep={1}\n              valueLabelFormat={(value) => `${value} bpm`}\n            />\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>\n              <Typography variant=\"caption\">{filters.minAvgHR || 0} bpm</Typography>\n              <Typography variant=\"caption\">{filters.maxAvgHR || 200} bpm</Typography>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Typography gutterBottom variant=\"body2\">Calories
|<</Typography>\n            <Slider\n              value={[filters.minCalories || 0, filters.maxCalories || 1000]}\n              onChange={(event, newValue) => handleSliderChange('Calories', event, newValue)}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={1000}\n              step={10}\n              valueLabelFormat={(value) => `${value} cal`}\n            />\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>\n   
|<           <Typography variant=\"caption\">{filters.minCalories || 0} cal</Typography>\n              <Typography variant=\"caption\">{filters.maxCalories || 1000} cal</Typography>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Typography gutterBottom variant=\"body2\">Avg Speed (km/h)</Typography>\n            <Slider\n              value={[filters.minAvgSpeed || 0, filters.maxAvgSpeed || 20]}\n              onChange={(event, newValue) => 
|<handleSliderChange('AvgSpeed', event, newValue)}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={20}\n              step={0.1}\n              valueLabelFormat={(value) => `${value} km/h`}\n            />\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: -1 }}>\n              <Typography variant=\"caption\">{filters.minAvgSpeed || 0} km/h</Typography>\n              <Typography variant=\"caption\">{filters.maxAvgSpeed || 2
|<0} km/h</Typography>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Dominant HR Zone</InputLabel>\n              <Select\n                value={filters.dominantHRZone || 'any'}\n                label=\"Dominant HR Zone\"\n                onChange={(e) => handleSelectChange('dominantHRZone', e)}\n              >\n                <MenuItem value=\"any\">Any Zone</MenuItem>\n   
|<             <MenuItem value=\"z1\">Zone 1 (Recovery)</MenuItem>\n                <MenuItem value=\"z2\">Zone 2 (Aerobic)</MenuItem>\n                <MenuItem value=\"z3\">Zone 3 (Tempo)</MenuItem>\n                <MenuItem value=\"z4\">Zone 4 (Threshold)</MenuItem>\n                <MenuItem value=\"z5\">Zone 5 (Maximum)</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      \n      <DialogActions sx={{ px: 
|<3, pb: 3, borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`, pt: 2 }}>\n        <Button onClick={handleClearFilters} color=\"secondary\">\n          Clear All\n        </Button>\n        <Button onClick={onClose} variant=\"contained\">\n          Apply Filters\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n/*---------------- Filter Section ----------------*/\nconst FilterSection = ({ workoutDays }) => {\n  const [showDatePicker, setShowDatePicker] = us
|<eState(false);\n  const { filters, setFilters } = useFilters();\n  const theme = useTheme();\n\n  // Initialize with a default range if not set\n  const selectionRange = {\n    startDate: filters.startDate ? new Date(filters.startDate) : subDays(new Date(), 30),\n    endDate: filters.endDate ? new Date(filters.endDate) : new Date(),\n    key: 'selection',\n  };\n\n  const handleSelect = (ranges) => {\n    const { selection } = ranges;\n    setFilters({ \n      startDate: format(selecti
|<on.startDate, 'yyyy-MM-dd'), \n      endDate: format(selection.endDate, 'yyyy-MM-dd'),\n      dateRange: 'custom'\n    });\n  };\n\n  const applyPredefinedRange = (range) => {\n    const { startDate, endDate } = range.getRange();\n    setFilters({ \n      dateRange: range.value, \n      startDate, \n      endDate \n    });\n    setShowDatePicker(false);\n  };\n\n  const getActiveTabValue = () => {\n    if (filters.dateRange === 'all') return 'all';\n    if (filters.dateRange === 'custo
|<m') return 'custom';\n    for (const range of predefinedRanges) {\n      if (filters.dateRange === range.value) return range.value;\n    }\n    return 'all';\n  };\n\n  const handleFilterChange = (key, value) => {\n    setFilters({ [key]: value });\n  };\n\n  const handleTabChange = (e, value) => {\n    if (value === 'all') {\n      setFilters({ dateRange: 'all', startDate: null, endDate: null });\n    } else if (value === 'custom') {\n      setFilters({ dateRange: 'custom' });\n      
|<setShowDatePicker(true);\n    } else {\n      const range = predefinedRanges.find((r) => r.value === value);\n      if (range) applyPredefinedRange(range);\n    }\n  };\n\n  return (\n    <Box sx={{ mb: 3 }}>\n      <Tabs\n        value={getActiveTabValue()}\n        onChange={handleTabChange}\n        sx={{\n          mb: 2,\n          '& .MuiTab-root': {\n            fontWeight: 500,\n            fontSize: '0.9rem',\n            minHeight: 48,\n          },\n          '& .Mui-selecte
|<d': {\n            color: theme.palette.primary.main,\n            fontWeight: 600,\n          }\n        }}\n      >\n        <Tab value=\"all\" label=\"All Dates\" />\n        <Tab value=\"custom\" label=\"Custom Range\" />\n        {predefinedRanges.map((range) => (\n          <Tab key={range.value} value={range.value} label={range.label} />\n        ))}\n      </Tabs>\n\n      {filters.dateRange === 'custom' && (\n        <Box sx={{ mb: 2 }}>\n          <Button\n            variant
|<=\"outlined\"\n            startIcon={<CalendarToday />}\n            onClick={() => setShowDatePicker(!showDatePicker)}\n            sx={{\n              borderRadius: 2,\n              borderWidth: 2,\n              '&:hover': {\n                borderWidth: 2,\n              }\n            }}\n          >\n            {formatDateRange(filters.startDate, filters.endDate)}\n          </Button>\n          \n          <Dialog\n            open={showDatePicker}\n            onClose={() =
|<> setShowDatePicker(false)}\n            PaperProps={{ \n              sx: { \n                borderRadius: 2, \n                boxShadow: '0 10px 40px rgba(0,0,0,0.2)',\n                bgcolor: 'background.paper'\n              } \n            }}\n          >\n            <DialogTitle sx={{ pb: 1 }}>Select Date Range</DialogTitle>\n            <DialogContent sx={{ p: 0 }}>\n              <DateRange\n                ranges={[selectionRange]}\n                onChange={handleSelect}\n
|<                months={2}\n                direction=\"horizontal\"\n                showMonthAndYearPickers\n                rangeColors={[theme.palette.primary.main]}\n              />\n            </DialogContent>\n            <DialogActions sx={{ pt: 0, px: 2, pb: 2 }}>\n              <Button \n                onClick={() => setShowDatePicker(false)}\n                variant=\"contained\"\n              >\n                Done\n              </Button>\n            </DialogActions>
|<\n          </Dialog>\n        </Box>\n      )}\n\n      <FormControl fullWidth size=\"small\">\n        <InputLabel>Workout Day</InputLabel>\n        <Select\n          value={filters.workoutDay || 'all'}\n          label=\"Workout Day\"\n          onChange={(e) => handleFilterChange('workoutDay', e.target.value)}\n          sx={{ borderRadius: 2 }}\n        >\n          <MenuItem value=\"all\">All Days</MenuItem>\n          {workoutDays.map((day) => (\n            <MenuItem key={day}
|< value={day}>{day}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n\n/*---------------- Workout Table ----------------*/\nconst WorkoutTable = ({ workouts, onRowClick }) => {\n  const theme = useTheme();\n  if (!workouts || workouts.length === 0)\n    return (\n      <Fade in={true}>\n        <Alert severity=\"info\" sx={{ mt: 2, borderRadius: 2, boxShadow: 1 }}>\n          No workouts match the selected filters.\n        </Alert>\n      </Fade
|<>\n    );\n\n  return (\n    <TableContainer sx={{\n      maxHeight: 440,\n      borderRadius: 2,\n      border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\n      boxShadow: '0 4px 24px rgba(0,0,0,0.05)',\n      background: theme.palette.background.paper,\n      overflow: 'auto'\n    }}>\n      <Table stickyHeader aria-label=\"workout summary table\">\n        <TableHead>\n          <TableRow>\n            {['Date', 'Duration', 'Distance (km)', 'Avg Speed', 'Calories', 'Avg HR',
|< 'Avg Cadence', 'HR Zones', 'Type', 'Actions'].map((header) => (\n              <TableCell\n                key={header}\n                sx={{\n                  fontWeight: 'bold',\n                  bgcolor: theme.palette.mode === 'dark'\n                    ? alpha(theme.palette.primary.dark, 0.3)\n                    : alpha(theme.palette.primary.main, 0.05),\n                  color: 'primary.main',\n                  py: 1.5,\n                  borderBottom: `2px solid ${alpha(t
|<heme.palette.primary.main, 0.2)}`\n                }}\n              >\n                {header}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {workouts.map((workout) => {\n            const hrData = extractHRData(workout);\n            const hrZones = getHRZoneDistribution(workout, hrData);\n            const hasZones = Object.values(hrZones.percentages).some(p => p > 0);\n            \n            return (\n 
|<             <Fade in={true} key={workout.date}>\n                <TableRow\n                  hover\n                  sx={{\n                    '&:hover': {\n                      bgcolor: alpha(theme.palette.primary.main, 0.03),\n                      transform: 'scale(1.002)',\n                      transition: 'all 0.2s ease'\n                    },\n                    '&:last-child td': { border: 0 }\n                  }}\n                >\n                  <TableCell sx={{ f
|<ontWeight: 'medium', py: 1.5 }}>\n                    {workout.date}\n                  </TableCell>\n                  <TableCell>{workout.duration}</TableCell>\n                  <TableCell>{workout.distance?.toFixed(2)}</TableCell>\n                  <TableCell>{workout.avgSpeed} km/h</TableCell>\n                  <TableCell>{workout.calories}</TableCell>\n                  <TableCell sx={{ fontWeight: 'medium' }}>{workout.avgHR} bpm</TableCell>\n                  <TableCell>\n    
|<                {Number.isFinite(workout.avgCadence) ? `${workout.avgCadence} spm` : '-'}\n                  </TableCell>\n                  \n                  {/* HR Zones Column - Corrected Colors and null handling */}\n                  <TableCell>\n                    {hasZones ? (\n                      <Tooltip\n                        title={\n                          <Box>\n                            <div>Zone 1 (Recovery): {hrZones.percentages.z1}%</div>\n                  
|<          <div>Zone 2 (Aerobic): {hrZones.percentages.z2}%</div>\n                            <div>Zone 3 (Tempo): {hrZones.percentages.z3}%</div>\n                            <div>Zone 4 (Threshold): {hrZones.percentages.z4}%</div>\n                            <div>Zone 5 (Max): {hrZones.percentages.z5}%</div>\n                          </Box>\n                        }\n                        arrow\n                        placement=\"top\"\n                      >\n                
|<        <Box sx={{ width: 60, height: 20, display: 'flex' }}>\n                            <Box sx={{ width: `${hrZones.percentages.z1}%`, bgcolor: hr:q:"
:.,1020d
|2,0,1758100272,,".,1020d"
:1020
|2,0,1758100258,,"1020"
:w!
|2,0,1757839373,,"w!"
:27536
<import React, { useState, useMemo, useCallback } from 'react';nimport {n  Paper,n  Box,n  Typography,n  Grid,n  Card,n  CardContent,n  Divider,n  Tabs,n  Tab,n  FormControl,n  InputLabel,n  Select,n  MenuItem,n  TableContainer,n  Table,n  TableHead,n  TableBody,n  TableRow,n  TableCell,n  IconButton,n  Chip,n  Tooltip,n  Button,n  alpha,n  useTheme,n  Skeleton,n  Alert,n} from '@mui/material';nimport {n  Visibility,n  FilterList,n  Refresh,n  CalendarToday,n  TrendingUp,n  DirectionsRun,n  Favorite,n  Speed as SpeedIcon,n  LocalFireDepartment,n  DirectionsWalk,n  AccessTime,n  ShowChartn} from '@mui/icons-material';nimport { DateRange } from 'react-date-range';nimport 'react-date-range/dist/styles.css';nimport 'react-date-range/dist/theme/default.css';nimport { format, subDays, startOfMonth, endOfMonth, subMonths } from 'date-fns';nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';nnimport { useFilters } from '../contexts/FilterContext';nimport { useFilteredWorkouts } from '../hooks/useFilteredWorkouts';nimport WorkoutDetailModal from './WorkoutDetailModal';nimport { convertDurationToMinutes } from '../utils/csvParser';nn/*---------------- Predefined Date Ranges ----------------*/nconst predefinedRanges = [n  {n    label: 'Last 7 Days',n    value: 'last7days',n    getRange: () => ({n      startDate: format(subDays(new Date(), 6), 'yyyy-MM-dd'),n      endDate: format(new Date(), 'yyyy-MM-dd'),n    }),n  },n  {n    label: 'Last 30 Days',n    value: 'last30days',n    getRange: () => ({n      startDate: format(subDays(new Date(), 29), 'yyyy-MM-dd'),n      endDate: format(new Date(), 'yyyy-MM-dd'),n    }),n  },n  {n    label: 'This Month',n    value: 'thisMonth',n    getRange: () => {n      const now = new Date();n      return { startDate: format(startOfMonth(now), 'yyyy-MM-dd'), endDate: format(endOfMonth(now), 'yyyy-MM-dd') };n    },n  },n  {n    label: 'Last Month',n    value: 'lastMonth',n    getRange: () => {n      const now = new Date();n      const firstDayLastMonth = startOfMonth(subMonths(now, 1));n      const lastDayLastMonth = endOfMonth(subMonths(now, 1));n      return { startDate: format(firstDayLastMonth, 'yyyy-MM-dd'), endDate: format(lastDayLastMonth, 'yyyy-MM-dd') };n    },n  },n];nn/*---------------- Helper Functions ----------------*/nconst formatDateRange = (start, end) =>n  start && end ? `${format(new Date(start), 'MMM d, yyyy')} - ${format(new Date(end), 'MMM d, yyyy')}` : 'Select Date Range';nnconst parseDurationToMinutes = (d) => {n  if (d == null) return 0;n  if (typeof d === 'number') return d;n  if (typeof d === 'string') {n    if (d.includes(':')) {n      const parts = d.split(':').map(p => Number(p));n      if (parts.length === 3 && parts.every(p => !Number.isNaN(p))) {n        return parts[0] * 60 + parts[1] + parts[2] / 60;n      }n      if (parts.length === 2 && parts.every(p => !Number.isNaN(p))) {n        return parts[0] + parts[1] / 60;n      }n    }n    const n = Number(d);n    return Number.isFinite(n) ? n : 0;n  }n  return 0;n};nn/*n  Improved genHrSamplesFromSegment:n  - Uses HR Start, HR Peak, HR End when available.n  - Interpolates across the segment duration (triangular if start/peak/end available).n  - Falls back to avgHR or mid-point if necessary.n*/nconst genHrSamplesFromSegment = (s) => {n  const durationMin = Math.max(0.1, parseDurationToMinutes(s.Duration ?? s.duration ?? s.Time ?? 0));n  const samplesCount = Math.max(1, Math.round(durationMin));nn  const startHR = Number(s['HR Start (bpm)'] ?? s.hrStart ?? s.startHR ?? NaN);n  const peakHR = Number(s['HR Peak (bpm)'] ?? s.hrPeak ?? s.peakHR ?? NaN);n  const endHR = Number(s['HR End (bpm)'] ?? s.hrEnd ?? s.endHR ?? NaN);n  const avgHRField = Number(s.avgHR ?? s['avgHR'] ?? s.avg ?? NaN);nn  const samples = [];nn  // If we have start, peak, and end -> triangular interpolationn  if (Number.isFinite(startHR) && Number.isFinite(peakHR) && Number.isFinite(endHR)) {n    // split samples roughly into two phases: up (start->peak) and down (peak->end)n    const upCount = Math.max(1, Math.round(samplesCount * 0.5));n    const downCount = Math.max(1, samplesCount - upCount);nn    for (let i = 0; i < upCount; i++) {n      const t = upCount === 1 ? 0.5 : i / (upCount - 1);n      samples.push(Math.round(startHR + (peakHR - startHR) * t));n    }n    for (let i = 0; i < downCount; i++) {n      const t = downCount === 1 ? 0.5 : i / (downCount - 1);n      samples.push(Math.round(peakHR + (endHR - peakHR) * t));n    }n  } else if (Number.isFinite(startHR) && Number.isFinite(peakHR)) {n    for (let i = 0; i < samplesCount; i++) {n      const t = samplesCount === 1 ? 0.5 : i / (samplesCount - 1);n      samples.push(Math.round(startHR + (peakHR - startHR) * t));n    }n  } else if (Number.isFinite(peakHR) && Number.isFinite(endHR)) {n    for (let i = 0; i < samplesCount; i++) {n      const t = samplesCount === 1 ? 0.5 : i / (samplesCount - 1);n      samples.push(Math.round(peakHR + (endHR - peakHR) * t));n    }n  } else if (Number.isFinite(startHR) && Number.isFinite(endHR)) {n    for (let i = 0; i < samplesCount; i++) {n      const t = samplesCount === 1 ? 0.5 : i / (samplesCount - 1);n      samples.push(Math.round(startHR + (endHR - startHR) * t));n    }n  } else if (Number.isFinite(avgHRField)) {n    for (let i = 0; i < samplesCount; i++) samples.push(Math.round(avgHRField));n  } else if (Number.isFinite(startHR) && !Number.isFinite(peakHR) && !Number.isFinite(endHR)) {n    for (let i = 0; i < samplesCount; i++) samples.push(Math.round(startHR));n  }nn  return samples.filter(h => Number.isFinite(h) && h >= 30 && h <= 220);n};nnconst getHrSamplesFromWorkout = (workout) => {n  const samples = [];n  if (Array.isArray(workout?.segments) && workout.segments.length) {n    for (const seg of workout.segments) {n      const segSamples = genHrSamplesFromSegment(seg);n      if (segSamples.length) samples.push(...segSamples);n      else {n        // fallback: if segment has avgHR and Durationn        const avg = Number(seg.avgHR ?? seg['avgHR'] ?? NaN);n        if (Number.isFinite(avg)) {n          const count = Math.max(1, Math.round(parseDurationToMinutes(seg.Duration ?? seg.duration ?? 0)));n          for (let i = 0; i < count; i++) samples.push(Math.round(avg));n        }n      }n    }n  } else if (Array.isArray(workout.hrReadings) && workout.hrReadings.length) {n    samples.push(...workout.hrReadings.map(Number).filter(n => Number.isFinite(n) && n >= 30 && n <= 220));n  } else if (Number.isFinite(Number(workout.avgHR))) {n    samples.push(Math.round(Number(workout.avgHR)));n  }n  return samples;n};nnconst getZonePercentagesFromSegments = (workout) => {n  const hrSamples = getHrSamplesFromWorkout(workout);n  if (!hrSamples.length) return null; // keep null so fallback logic can run elsewherenn  const zoneCounts = { z1: 0, z2: 0, z3: 0, z4: 0, z5: 0 };n  for (const hr of hrSamples) {n    if (hr >= 81 && hr <= 97) zoneCounts.z1++;n    else if (hr >= 98 && hr <= 113) zoneCounts.z2++;n    else if (hr >= 114 && hr <= 129) zoneCounts.z3++;n    else if (hr >= 130 && hr <= 145) zoneCounts.z4++;n    else if (hr >= 146 && hr <= 162) zoneCounts.z5++;n  }n  const total = hrSamples.length;n  return [n    (zoneCounts.z1 / total) * 100,n    (zoneCounts.z2 / total) * 100,n    (zoneCounts.z3 / total) * 100,n    (zoneCounts.z4 / total) * 100,n    (zoneCounts.z5 / total) * 100,n  ];n};nnconst getTrendForField = (workout, workouts, field) => {n  const toNums = (arr) => (Array.isArray(arr) ? arr.map(Number).filter(n => Number.isFinite(n)) : []);nn  let values = [];n  if (Array.isArray(workout?.segments) && workout.segments.length) {n    for (const s of workout.segments) {n      if (s[field] !== undefined) {n        if (Array.isArray(s[field])) values.push(...s[field]);n        else values.push(s[field]);n      } else if (field === 'avgHR') {n        if (Array.isArray(s.hrReadings) && s.hrReadings.length) values.push(...s.hrReadings);n        else if (s.avgHR !== undefined) values.push(s.avgHR);n      }n    }n    values = toNums(values);n  }nn  if (!values.length) {n    const sameDay = (workouts || []).filter(w => w.workoutDay === workout.workoutDay && w[field] !== undefined);n    let source = [];n    if (sameDay.length) source = sameDay.slice().sort((a,b)=> new Date(a.date) - new Date(b.date));n    else source = (workouts || []).slice().sort((a,b)=> new Date(a.date) - new Date(b.date));n    const picked = source.slice(-7).map(w => w[field]).filter(v => v !== undefined && v !== null);n    values = toNums(picked);n  }nn  if (!values.length && workout[field] !== undefined && workout[field] !== null) {n    const val = Number(workout[field]);n    if (Number.isFinite(val)) values = [val];n  }nn  return values;n};nn/*---------------- Stat Card ----------------*/nconst StatCard = ({ title, value, icon, color = 'primary', loading, subtext }) => {n  const theme = useTheme();n  if (loading) return <Skeleton variant="rectangular" height={100} />;nn  return (n    <Cardn      sx={{n        height: '100%',n        borderRadius: 2,n        background: `linear-gradient(135deg, ${alpha(theme.palette[color].main, 0.1)} 0%, ${alpha(theme.palette[color].main, 0.05)} 100%)`,n        border: `1px solid ${alpha(theme.palette[color].main, 0.2)}`,n        transition: 'all 0.3s ease',n        '&:hover': { transform: 'translateY(-4px)', boxShadow: theme.shadows[4], border: `1px solid ${alpha(theme.palette[color].main, 0.4)}` },n      }}n    >n      <CardContent sx={{ p: 2, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>n          <Box sx={{ color: `${color}.main`, mr: 1 }}>{icon}</Box>n          <Typography variant="body2" color="text.secondary" fontWeight="medium">n            {title}n          </Typography>n        </Box>n        <Typography variant="h4" component="div" color={`${color}.main`} fontWeight="bold">n          {value}n        </Typography>n        {subtext && (n          <Typography variant="caption" color="text.secondary">n            {subtext}n          </Typography>n        )}n      </CardContent>n    </Card>n  );n};nn/*---------------- Filter Section ----------------*/nconst FilterSection = ({ workoutDays }) => {n  const [showDatePicker, setShowDatePicker] = useState(false);n  const { filters, setFilters } = useFilters();nn  const selectionRange = {n    startDate: filters.startDate ? new Date(filters.startDate) : subDays(new Date(), 30),n    endDate: filters.endDate ? new Date(filters.endDate) : new Date(),n    key: 'selection',n  };nn  const handleSelect = (ranges) => {n    const { selection } = ranges;n    setFilters({ startDate: format(selection.startDate, 'yyyy-MM-dd'), endDate: format(selection.endDate, 'yyyy-MM-dd') });n  };nn  const applyPredefinedRange = (range) => {n    const { startDate, endDate } = range.getRange();n    setFilters({ dateRange: 'range', startDate, endDate });n    setShowDatePicker(false);n  };nn  const getActiveTabValue = () => {n    if (filters.dateRange === 'all') return 'all';n    for (const range of predefinedRanges) {n      const { startDate, endDate } = range.getRange();n      if (filters.startDate === startDate && filters.endDate === endDate) return range.value;n    }n    return 'range';n  };nn  const handleFilterChange = (key, value) => setFilters({ [key]: value });nn  return (n    <Box sx={{ mb: 3, position: 'relative' }}>n      <Tabsn        value={getActiveTabValue()}n        onChange={(e, value) => {n          if (value === 'all') handleFilterChange('dateRange', 'all');n          else if (value === 'range') handleFilterChange('dateRange', 'range');n          else {n            const range = predefinedRanges.find((r) => r.value === value);n            if (range) applyPredefinedRange(range);n          }n        }}n        sx={{ mb: 2 }}n      >n        <Tab value="all" label="All Dates" />n        <Tab value="range" label="Custom Range" />n        {predefinedRanges.map((range) => (n          <Tab key={range.value} value={range.value} label={range.label} />n        ))}n      </Tabs>nn      {filters.dateRange === 'range' && (n        <Box>n          <Button variant="outlined" startIcon={<CalendarToday />} onClick={() => setShowDatePicker(!showDatePicker)} sx={{ mb: 2 }}>n            {formatDateRange(filters.startDate, filters.endDate)}n          </Button>n          {showDatePicker && (n            <Paper sx={{ position: 'absolute', zIndex: 10, mt: 1 }}>n              <DateRange ranges={[selectionRange]} onChange={handleSelect} months={2} direction="horizontal" showMonthAndYearPickers />n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 1, bgcolor: 'grey.50' }}>n                <Button onClick={() => setShowDatePicker(false)}>Done</Button>n              </Box>n            </Paper>n          )}n        </Box>n      )}nn      <FormControl fullWidth size="small" sx={{ mt: 2 }}>n        <InputLabel>Workout Day</InputLabel>n        <Select value={filters.workoutDay || 'all'} label="Workout Day" onChange={(e) => handleFilterChange('workoutDay', e.target.value)}>n          <MenuItem value="all">All Days</MenuItem>n          {workoutDays.map((day) => (n            <MenuItem key={day} value={day}>{day}</MenuItem>n          ))}n        </Select>n      </FormControl>n    </Box>n  );n};nn/*---------------- Workout Table with Sparklines ----------------*/nconst WorkoutTable = ({ workouts, allWorkouts, onRowClick }) => {n  const theme = useTheme();n  if (!workouts || workouts.length === 0)n    return <Alert severity="info" sx={{ mt: 2, borderRadius: 2 }}>No workouts match the selected filters.</Alert>;nn  const hasSteps = workouts.some(w => Number(w.steps) > 0);n  const hasCadence = workouts.some(w => Number(w.cadence) > 0);nn  const smoothArray = (arr) => {n    if (!Array.isArray(arr) || arr.length === 0) return [];n    return arr.map((v, i) => {n      const prev = arr[i - 1] ?? v;n      const next = arr[i + 1] ?? v;n      return Math.round((v + prev + next) / 3);n    });n  };nn  return (n    <TableContainer sx={{ maxHeight: 440, borderRadius: 2, border: `1px solid ${alpha(theme.palette.divider, 0.2)}` }}>n      <Table stickyHeader aria-label="workout summary table">n        <TableHead>n          <TableRow>n            {['Date', 'Duration', 'Distance (km)', 'Avg Speed', 'Calories', 'Avg HR', 'HR Zones', 'Trends', 'Type', 'Actions'].map((header) => (n              <TableCell key={header} sx={{ fontWeight: 'bold', bgcolor: 'grey.50' }}>{header}</TableCell>n            ))}n          </TableRow>n        </TableHead>n        <TableBody>n          {workouts.map((workout, idx) => {n            // per-minute HR samples (preferred)n            const hrSamples = getHrSamplesFromWorkout(workout); // [] if nonen            const hrTrendRaw = hrSamples.length ? hrSamples : getTrendForField(workout, allWorkouts, 'avgHR');n            const hrSmoothed = smoothArray(hrTrendRaw);nn            // zone percentages (prefer per-segment samples)n            const zonePercentagesFromSegments = getZonePercentagesFromSegments(workout);n            // if not available, compute from hrSmoothedn            const sourceForZones = zonePercentagesFromSegments ? null : hrSmoothed;n            let zonePercentages = zonePercentagesFromSegments;n            if (!zonePercentages) {n              const zoneCounts = { z1: 0, z2: 0, z3: 0, z4: 0, z5: 0 };n              sourceForZones.forEach(hr => {n                if (hr >= 81 && hr <= 97) zoneCounts.z1++;n                else if (hr >= 98 && hr <= 113) zoneCounts.z2++;n                else if (hr >= 114 && hr <= 129) zoneCounts.z3++;n                else if (hr >= 130 && hr <= 145) zoneCounts.z4++;n                else if (hr >= 146 && hr <= 162) zoneCounts.z5++;n              });n              const total = sourceForZones.length || 0;n              zonePercentages = total > 0n                ? [n                    (zoneCounts.z1 / total) * 100,n                    (zoneCounts.z2 / total) * 100,n                    (zoneCounts.z3 / total) * 100,n                    (zoneCounts.z4 / total) * 100,n                    (zoneCounts.z5 / total) * 100,n                  ]n                : [0, 0, 0, 0, 0];n            }nn            // trends for distance & speedn            const distanceTrendRaw = getTrendForField(workout, allWorkouts, 'distance');n            const speedTrendRaw = getTrendForField(workout, allWorkouts, 'avgSpeed');nn            const toNums = (arr) => Array.isArray(arr) ? arr.map(v => {n              const n = Number(v);n              return Number.isFinite(n) ? n : 0;n            }) : [];nn            const distNums = toNums(distanceTrendRaw);n            const speedNums = toNums(speedTrendRaw);nn            const minHR = hrTrendRaw.length ? Math.min(...hrTrendRaw).toFixed(0) : '-';n            const maxHR = hrTrendRaw.length ? Math.max(...hrTrendRaw).toFixed(0) : '-';n            const minDistance = distNums.length ? Math.min(...distNums).toFixed(1) : '-';n            const maxDistance = distNums.length ? Math.max(...distNums).toFixed(1) : '-';n            const minSpeed = speedNums.length ? Math.min(...speedNums).toFixed(1) : '-';n            const maxSpeed = speedNums.length ? Math.max(...speedNums).toFixed(1) : '-';nn            const totalPct = zonePercentages.reduce((a,b)=>a+b,0);n            const showZones = totalPct > 0;nn            return (n              <TableRow key={workout.date ?? idx} hover sx={{ '&:hover': { bgcolor: alpha(theme.palette.primary.main, 0.05) } }}>n                <TableCell>{workout.date}</TableCell>n                <TableCell>{workout.duration}</TableCell>n                <TableCell>{typeof workout.distance === 'number' ? workout.distance.toFixed(2) : workout.distance ?? '-'}</TableCell>n                <TableCell>{workout.avgSpeed ?? '-'} km/h</TableCell>n                <TableCell>{workout.calories ?? '-'}</TableCell>n                <TableCell>{workout.avgHR ?? '-'} bpm</TableCell>nn                {/* HR Zones */}n                <TableCell>n                  <Tooltip title={n                    <Box>n                      {HR_ZONES.map((z, i) => (n                        <div key={z.id}>{z.label}: {Math.round(zonePercentages[i])}%</div>n                      ))}n                    </Box>n                  }>n                    <Box sx={{ width: 60, height: 18, display: 'flex', borderRadius: 1, overflow: 'hidden', bgcolor: showZones ? 'transparent' : 'grey.200' }}>n                      {showZones ? zonePercentages.map((p, i) => (n                        <Box key={i}n                          sx={{n                            flex: p || 0.01,n                            minWidth: p > 0 ? '4px' : 0,n                            backgroundColor: HR_ZONES[i].color,n                            height: '100%',n                          }}n                        />n                      )) : (n                        <Box sx={{ width: '100%', bgcolor: 'grey.200', height: '100%' }} />n                      )}n                    </Box>n                  </Tooltip>n                </TableCell>nn                {/* Trends */}n                <TableCell>n                  <Tooltip title={`Distance: ${minDistance}-${maxDistance} km | Speed: ${minSpeed}-${maxSpeed} km/h`}>n                    <Box sx={{ width: 110, height: 40 }}>n                      <Sparklines data={distNums.length ? distNums : [0]} width={110} height={20}>n                        <SparklinesLine color="#42a5f5" />n                        <SparklinesSpots />n                      </Sparklines>n                      <Sparklines data={speedNums.length ? speedNums : [0]} width={110} height={20}>n                        <SparklinesLine color="#ff9800" />n                        <SparklinesSpots />n                      </Sparklines>n                    </Box>n                  </Tooltip>n                </TableCell>nn                <TableCell>n                  <Chip label={workout.workoutDay} color={workout.workoutDay === 'Tuesday' ? 'primary' : 'secondary'} size="small" variant="outlined" />n                </TableCell>n                <TableCell align="center">n                  <Tooltip title={workout.segments?.length ? 'View details' : 'No detailed data'}>n                    <span>n                      <IconButton onClick={() => onRowClick(workout)} disabled={!workout.segments?.length} size="small">n                        <Visibility />n                      </IconButton>n                    </span>n                  </Tooltip>n                </TableCell>n              </TableRow>n            );n          })}n        </TableBody>n      </Table>n    </TableContainer>n  );n};nn/*---------------- Main Component ----------------*/nexport default function WorkoutSummaryTable({ workouts: allWorkouts, loading = false, error = null, onRefresh }) {n  const [selectedWorkout, setSelectedWorkout] = useState(null);n  const [modalOpen, setModalOpen] = useState(false);n  const theme = useTheme();nn  const { filters } = useFilters();n  const filteredWorkouts = useFilteredWorkouts(allWorkouts);nn  const handleRowClick = useCallback((workout) => {n    setSelectedWorkout(workout);n    setModalOpen(true);n  }, []);nn  const workoutDays = useMemo(n    () => Array.from(new Set((allWorkouts || []).map((w) => w.workoutDay).filter(Boolean))).sort(),n    [allWorkouts]n  );nn  const stats = useMemo(() => {n    const nonRestWorkouts = (filteredWorkouts || []).filter(w => w.workoutDay !== 'Rest');n    const totalWorkouts = nonRestWorkouts.length;nn    const totalDistance = nonRestWorkouts.reduce((sum, w) => sum + (Number(w.distance) || 0), 0).toFixed(2);n    const totalDuration = nonRestWorkouts.reduce((sum, w) => sum + convertDurationToMinutes(w.duration || 0), 0);n    const avgDuration = totalWorkouts > 0 ? (totalDuration / totalWorkouts).toFixed(1) : 0;nn    const validHRWorkouts = nonRestWorkouts.filter(w => Number(w.avgHR) && Number(w.avgHR) > 0);n    const avgHR = validHRWorkouts.length > 0n      ? (validHRWorkouts.reduce((sum, w) => sum + Number(w.avgHR), 0) / validHRWorkouts.length).toFixed(0)n      : 0;nn    // avg calories and steps (per workout)n    const avgCalories = totalWorkouts > 0n      ? Math.round(nonRestWorkouts.reduce((sum, w) => sum + (Number(w.calories) || 0), 0) / totalWorkouts)n      : 0;nn    const avgSteps = totalWorkouts > 0n      ? Math.round(nonRestWorkouts.reduce((sum, w) => sum + (Number(w.steps) || 0), 0) / totalWorkouts)n      : 0;nn    const validSpeedWorkouts = nonRestWorkouts.filter(w => Number(w.avgSpeed) && Number(w.avgSpeed) > 0);n    const avgSpeed = validSpeedWorkouts.length > 0n      ? (validSpeedWorkouts.reduce((sum, w) => sum + Number(w.avgSpeed), 0) / validSpeedWorkouts.length).toFixed(1)n      : 0;nn    const validCadenceWorkouts = nonRestWorkouts.filter(w => Number(w.cadence) && Number(w.cadence) > 0);n    const avgCadence = validCadenceWorkouts.length > 0n      ? (validCadenceWorkouts.reduce((sum, w) => sum + Number(w.cadence), 0) / validCadenceWorkouts.length).toFixed(0)n      : 0;nn    return {n      totalWorkouts,n      totalDistance,n      avgDuration,n      avgHR,n      avgSpeed,n      avgCalories,n      avgSteps,n      avgCadencen    };n  }, [filteredWorkouts]);nn  const hasSteps = (allWorkouts || []).some(w => Number(w.steps) > 0);n  const hasCadence = (allWorkouts || []).some(w => Number(w.cadence) > 0);nn  return (n    <Paper sx={{ width: '100%', overflow: 'hidden', mt: 2, borderRadius: 2, boxShadow: '0 8px 32px rgba(0,0,0,0.05)', border: `1px solid ${alpha(theme.palette.divider, 0.1)}` }}>n      <Box sx={{ p: 3 }}>n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>n          <Typography variant="h4" fontWeight="bold" color="primary">n            Workout Summaryn          </Typography>n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>n            <Tooltip title="Refresh data">n              <IconButton onClick={onRefresh} color="primary" disabled={loading}>n                <Refresh />n              </IconButton>n            </Tooltip>n            <FilterList color="primary" />n            <Typography variant="body2" color="primary" fontWeight="medium">n              Filtersn            </Typography>n          </Box>n        </Box>nn        {error && (n          <Alert severity="error" sx={{ mb: 2, borderRadius: 2 }}>n            {error}n          </Alert>n        )}nn        <FilterSection workoutDays={workoutDays} />nn        <Divider sx={{ my: 3 }} />nn        <Grid container spacing={2} sx={{ mb: 3 }}>n          <Grid item xs={12} sm={6} md={3}>n            <StatCard title="Total Workouts" value={stats.totalWorkouts} icon={<DirectionsRun />} color="primary" loading={loading} />n          </Grid>n          <Grid item xs={12} sm={6} md={3}>n            <StatCard title="Total Distance" value={stats.totalDistance} icon={<TrendingUp />} color="secondary" loading={loading} subtext="km" />n          </Grid>n          <Grid item xs={12} sm={6} md={3}>n            <StatCard title="Avg Duration" value={stats.avgDuration} icon={<AccessTime />} color="info" loading={loading} subtext="minutes" />n          </Grid>n          <Grid item xs={12} sm={6} md={3}>n            <StatCard title="Avg Heart Rate" value={stats.avgHR} icon={<Favorite />} color="error" loading={loading} subtext="bpm" />n          </Grid>n          <Grid item xs={12} sm={6} md={3}>n            <StatCard title="Avg Speed" value={stats.avgSpeed} icon={<SpeedIcon />} color="warning" loading={loading} subtext="km/h" />n          </Grid>n          <Grid item xs={12} sm={6} md={3}>n            <StatCard title="Avg Calories" value={stats.avgCalories} icon={<LocalFireDepartment />} color="success" loading={loading} />n          </Grid>n          {hasSteps && (n            <Grid item xs={12} sm={6} md={3}>n              <StatCard title="Avg Steps" value={stats.avgSteps} icon={<DirectionsWalk />} color="info" loading={loading} />n            </Grid>n          )}n          {hasCadence && (n            <Grid item xs={12} sm={6} md={3}>n              <StatCard title="Avg Cadence" value={stats.avgCadence} icon={<ShowChart />} color="secondary" loading={loading} subtext="steps/min" />n            </Grid>n          )}n        </Grid>nn        {loading ? (n          <Grid container spacing={2} sx={{ mt: 2 }}>n            {[1, 2, 3, 4, 5].map((i) => (n              <Grid item xs={12} key={i}>n                <Skeleton variant="rectangular" height={50} />n              </Grid>n            ))}n          </Grid>n        ) : (n          <WorkoutTable workouts={filteredWorkouts} allWorkouts={allWorkouts} onRowClick={handleRowClick} />n        )}n      </Box>nn      <WorkoutDetailModal workout={selectedWorkout} open={modalOpen} onClose={() => setModalOpen(false)} />n    </Paper>n  );n}n:q
|2,0,1757839054,,>27651
|<"import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  Paper,\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Divider,\n  Tabs,\n  Tab,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n  Chip,\n  Tooltip,\n  Button,\n  alpha,\n  useTheme,\n  Skeleton,\n  Alert,\n} from '@mui/material';\nimport {\n  Visibility,\n  FilterList,\n  Refresh,\n  CalendarT
|<oday,\n  TrendingUp,\n  DirectionsRun,\n  Favorite,\n  Speed as SpeedIcon,\n  LocalFireDepartment,\n  DirectionsWalk,\n  AccessTime,\n  ShowChart\n} from '@mui/icons-material';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { format, subDays, startOfMonth, endOfMonth, subMonths } from 'date-fns';\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\n\nimpor
|<t { useFilters } from '../contexts/FilterContext';\nimport { useFilteredWorkouts } from '../hooks/useFilteredWorkouts';\nimport WorkoutDetailModal from './WorkoutDetailModal';\nimport { convertDurationToMinutes } from '../utils/csvParser';\n\n/*---------------- Predefined Date Ranges ----------------*/\nconst predefinedRanges = [\n  {\n    label: 'Last 7 Days',\n    value: 'last7days',\n    getRange: () => ({\n      startDate: format(subDays(new Date(), 6), 'yyyy-MM-dd'),\n      endDat
|<e: format(new Date(), 'yyyy-MM-dd'),\n    }),\n  },\n  {\n    label: 'Last 30 Days',\n    value: 'last30days',\n    getRange: () => ({\n      startDate: format(subDays(new Date(), 29), 'yyyy-MM-dd'),\n      endDate: format(new Date(), 'yyyy-MM-dd'),\n    }),\n  },\n  {\n    label: 'This Month',\n    value: 'thisMonth',\n    getRange: () => {\n      const now = new Date();\n      return { startDate: format(startOfMonth(now), 'yyyy-MM-dd'), endDate: format(endOfMonth(now), 'yyyy-MM-dd') 
|<};\n    },\n  },\n  {\n    label: 'Last Month',\n    value: 'lastMonth',\n    getRange: () => {\n      const now = new Date();\n      const firstDayLastMonth = startOfMonth(subMonths(now, 1));\n      const lastDayLastMonth = endOfMonth(subMonths(now, 1));\n      return { startDate: format(firstDayLastMonth, 'yyyy-MM-dd'), endDate: format(lastDayLastMonth, 'yyyy-MM-dd') };\n    },\n  },\n];\n\n/*---------------- Helper Functions ----------------*/\nconst formatDateRange = (start, end) =
|<>\n  start && end ? `${format(new Date(start), 'MMM d, yyyy')} - ${format(new Date(end), 'MMM d, yyyy')}` : 'Select Date Range';\n\nconst parseDurationToMinutes = (d) => {\n  if (d == null) return 0;\n  if (typeof d === 'number') return d;\n  if (typeof d === 'string') {\n    if (d.includes(':')) {\n      const parts = d.split(':').map(p => Number(p));\n      if (parts.length === 3 && parts.every(p => !Number.isNaN(p))) {\n        return parts[0] * 60 + parts[1] + parts[2] / 60;\n     
|< }\n      if (parts.length === 2 && parts.every(p => !Number.isNaN(p))) {\n        return parts[0] + parts[1] / 60;\n      }\n    }\n    const n = Number(d);\n    return Number.isFinite(n) ? n : 0;\n  }\n  return 0;\n};\n\n/*\n  Improved genHrSamplesFromSegment:\n  - Uses HR Start, HR Peak, HR End when available.\n  - Interpolates across the segment duration (triangular if start/peak/end available).\n  - Falls back to avgHR or mid-point if necessary.\n*/\nconst genHrSamplesFromSegment 
|<= (s) => {\n  const durationMin = Math.max(0.1, parseDurationToMinutes(s.Duration ?? s.duration ?? s.Time ?? 0));\n  const samplesCount = Math.max(1, Math.round(durationMin));\n\n  const startHR = Number(s['HR Start (bpm)'] ?? s.hrStart ?? s.startHR ?? NaN);\n  const peakHR = Number(s['HR Peak (bpm)'] ?? s.hrPeak ?? s.peakHR ?? NaN);\n  const endHR = Number(s['HR End (bpm)'] ?? s.hrEnd ?? s.endHR ?? NaN);\n  const avgHRField = Number(s.avgHR ?? s['avgHR'] ?? s.avg ?? NaN);\n\n  const s
|<amples = [];\n\n  // If we have start, peak, and end -> triangular interpolation\n  if (Number.isFinite(startHR) && Number.isFinite(peakHR) && Number.isFinite(endHR)) {\n    // split samples roughly into two phases: up (start->peak) and down (peak->end)\n    const upCount = Math.max(1, Math.round(samplesCount * 0.5));\n    const downCount = Math.max(1, samplesCount - upCount);\n\n    for (let i = 0; i < upCount; i++) {\n      const t = upCount === 1 ? 0.5 : i / (upCount - 1);\n      sa
|<mples.push(Math.round(startHR + (peakHR - startHR) * t));\n    }\n    for (let i = 0; i < downCount; i++) {\n      const t = downCount === 1 ? 0.5 : i / (downCount - 1);\n      samples.push(Math.round(peakHR + (endHR - peakHR) * t));\n    }\n  } else if (Number.isFinite(startHR) && Number.isFinite(peakHR)) {\n    for (let i = 0; i < samplesCount; i++) {\n      const t = samplesCount === 1 ? 0.5 : i / (samplesCount - 1);\n      samples.push(Math.round(startHR + (peakHR - startHR) * t));
|<\n    }\n  } else if (Number.isFinite(peakHR) && Number.isFinite(endHR)) {\n    for (let i = 0; i < samplesCount; i++) {\n      const t = samplesCount === 1 ? 0.5 : i / (samplesCount - 1);\n      samples.push(Math.round(peakHR + (endHR - peakHR) * t));\n    }\n  } else if (Number.isFinite(startHR) && Number.isFinite(endHR)) {\n    for (let i = 0; i < samplesCount; i++) {\n      const t = samplesCount === 1 ? 0.5 : i / (samplesCount - 1);\n      samples.push(Math.round(startHR + (endHR 
|<- startHR) * t));\n    }\n  } else if (Number.isFinite(avgHRField)) {\n    for (let i = 0; i < samplesCount; i++) samples.push(Math.round(avgHRField));\n  } else if (Number.isFinite(startHR) && !Number.isFinite(peakHR) && !Number.isFinite(endHR)) {\n    for (let i = 0; i < samplesCount; i++) samples.push(Math.round(startHR));\n  }\n\n  return samples.filter(h => Number.isFinite(h) && h >= 30 && h <= 220);\n};\n\nconst getHrSamplesFromWorkout = (workout) => {\n  const samples = [];\n  i
|<f (Array.isArray(workout?.segments) && workout.segments.length) {\n    for (const seg of workout.segments) {\n      const segSamples = genHrSamplesFromSegment(seg);\n      if (segSamples.length) samples.push(...segSamples);\n      else {\n        // fallback: if segment has avgHR and Duration\n        const avg = Number(seg.avgHR ?? seg['avgHR'] ?? NaN);\n        if (Number.isFinite(avg)) {\n          const count = Math.max(1, Math.round(parseDurationToMinutes(seg.Duration ?? seg.durat
|<ion ?? 0)));\n          for (let i = 0; i < count; i++) samples.push(Math.round(avg));\n        }\n      }\n    }\n  } else if (Array.isArray(workout.hrReadings) && workout.hrReadings.length) {\n    samples.push(...workout.hrReadings.map(Number).filter(n => Number.isFinite(n) && n >= 30 && n <= 220));\n  } else if (Number.isFinite(Number(workout.avgHR))) {\n    samples.push(Math.round(Number(workout.avgHR)));\n  }\n  return samples;\n};\n\nconst getZonePercentagesFromSegments = (workou
|<t) => {\n  const hrSamples = getHrSamplesFromWorkout(workout);\n  if (!hrSamples.length) return null; // keep null so fallback logic can run elsewhere\n\n  const zoneCounts = { z1: 0, z2: 0, z3: 0, z4: 0, z5: 0 };\n  for (const hr of hrSamples) {\n    if (hr >= 81 && hr <= 97) zoneCounts.z1++;\n    else if (hr >= 98 && hr <= 113) zoneCounts.z2++;\n    else if (hr >= 114 && hr <= 129) zoneCounts.z3++;\n    else if (hr >= 130 && hr <= 145) zoneCounts.z4++;\n    else if (hr >= 146 && hr <
|<= 162) zoneCounts.z5++;\n  }\n  const total = hrSamples.length;\n  return [\n    (zoneCounts.z1 / total) * 100,\n    (zoneCounts.z2 / total) * 100,\n    (zoneCounts.z3 / total) * 100,\n    (zoneCounts.z4 / total) * 100,\n    (zoneCounts.z5 / total) * 100,\n  ];\n};\n\nconst getTrendForField = (workout, workouts, field) => {\n  const toNums = (arr) => (Array.isArray(arr) ? arr.map(Number).filter(n => Number.isFinite(n)) : []);\n\n  let values = [];\n  if (Array.isArray(workout?.segments
|<) && workout.segments.length) {\n    for (const s of workout.segments) {\n      if (s[field] !== undefined) {\n        if (Array.isArray(s[field])) values.push(...s[field]);\n        else values.push(s[field]);\n      } else if (field === 'avgHR') {\n        if (Array.isArray(s.hrReadings) && s.hrReadings.length) values.push(...s.hrReadings);\n        else if (s.avgHR !== undefined) values.push(s.avgHR);\n      }\n    }\n    values = toNums(values);\n  }\n\n  if (!values.length) {\n   
|< const sameDay = (workouts || []).filter(w => w.workoutDay === workout.workoutDay && w[field] !== undefined);\n    let source = [];\n    if (sameDay.length) source = sameDay.slice().sort((a,b)=> new Date(a.date) - new Date(b.date));\n    else source = (workouts || []).slice().sort((a,b)=> new Date(a.date) - new Date(b.date));\n    const picked = source.slice(-7).map(w => w[field]).filter(v => v !== undefined && v !== null);\n    values = toNums(picked);\n  }\n\n  if (!values.length && 
|<workout[field] !== undefined && workout[field] !== null) {\n    const val = Number(workout[field]);\n    if (Number.isFinite(val)) values = [val];\n  }\n\n  return values;\n};\n\n/*---------------- Stat Card ----------------*/\nconst StatCard = ({ title, value, icon, color = 'primary', loading, subtext }) => {\n  const theme = useTheme();\n  if (loading) return <Skeleton variant=\"rectangular\" height={100} />;\n\n  return (\n    <Card\n      sx={{\n        height: '100%',\n        bor
|<derRadius: 2,\n        background: `linear-gradient(135deg, ${alpha(theme.palette[color].main, 0.1)} 0%, ${alpha(theme.palette[color].main, 0.05)} 100%)`,\n        border: `1px solid ${alpha(theme.palette[color].main, 0.2)}`,\n        transition: 'all 0.3s ease',\n        '&:hover': { transform: 'translateY(-4px)', boxShadow: theme.shadows[4], border: `1px solid ${alpha(theme.palette[color].main, 0.4)}` },\n      }}\n    >\n      <CardContent sx={{ p: 2, display: 'flex', flexDirection:
|< 'column', alignItems: 'center' }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n          <Box sx={{ color: `${color}.main`, mr: 1 }}>{icon}</Box>\n          <Typography variant=\"body2\" color=\"text.secondary\" fontWeight=\"medium\">\n            {title}\n          </Typography>\n        </Box>\n        <Typography variant=\"h4\" component=\"div\" color={`${color}.main`} fontWeight=\"bold\">\n          {value}\n        </Typography>\n        {subtext && (\n 
|<         <Typography variant=\"caption\" color=\"text.secondary\">\n            {subtext}\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n/*---------------- Filter Section ----------------*/\nconst FilterSection = ({ workoutDays }) => {\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const { filters, setFilters } = useFilters();\n\n  const selectionRange = {\n    startDate: filters.startDate ? new Date(filters.startDate) : subDays
|<(new Date(), 30),\n    endDate: filters.endDate ? new Date(filters.endDate) : new Date(),\n    key: 'selection',\n  };\n\n  const handleSelect = (ranges) => {\n    const { selection } = ranges;\n    setFilters({ startDate: format(selection.startDate, 'yyyy-MM-dd'), endDate: format(selection.endDate, 'yyyy-MM-dd') });\n  };\n\n  const applyPredefinedRange = (range) => {\n    const { startDate, endDate } = range.getRange();\n    setFilters({ dateRange: 'range', startDate, endDate });\n  
|<  setShowDatePicker(false);\n  };\n\n  const getActiveTabValue = () => {\n    if (filters.dateRange === 'all') return 'all';\n    for (const range of predefinedRanges) {\n      const { startDate, endDate } = range.getRange();\n      if (filters.startDate === startDate && filters.endDate === endDate) return range.value;\n    }\n    return 'range';\n  };\n\n  const handleFilterChange = (key, value) => setFilters({ [key]: value });\n\n  return (\n    <Box sx={{ mb: 3, position: 'relative'
|< }}>\n      <Tabs\n        value={getActiveTabValue()}\n        onChange={(e, value) => {\n          if (value === 'all') handleFilterChange('dateRange', 'all');\n          else if (value === 'range') handleFilterChange('dateRange', 'range');\n          else {\n            const range = predefinedRanges.find((r) => r.value === value);\n            if (range) applyPredefinedRange(range);\n          }\n        }}\n        sx={{ mb: 2 }}\n      >\n        <Tab value=\"all\" label=\"All Da
|<tes\" />\n        <Tab value=\"range\" label=\"Custom Range\" />\n        {predefinedRanges.map((range) => (\n          <Tab key={range.value} value={range.value} label={range.label} />\n        ))}\n      </Tabs>\n\n      {filters.dateRange === 'range' && (\n        <Box>\n          <Button variant=\"outlined\" startIcon={<CalendarToday />} onClick={() => setShowDatePicker(!showDatePicker)} sx={{ mb: 2 }}>\n            {formatDateRange(filters.startDate, filters.endDate)}\n          <
|</Button>\n          {showDatePicker && (\n            <Paper sx={{ position: 'absolute', zIndex: 10, mt: 1 }}>\n              <DateRange ranges={[selectionRange]} onChange={handleSelect} months={2} direction=\"horizontal\" showMonthAndYearPickers />\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 1, bgcolor: 'grey.50' }}>\n                <Button onClick={() => setShowDatePicker(false)}>Done</Button>\n              </Box>\n            </Paper>\n          )}\n 
|<       </Box>\n      )}\n\n      <FormControl fullWidth size=\"small\" sx={{ mt: 2 }}>\n        <InputLabel>Workout Day</InputLabel>\n        <Select value={filters.workoutDay || 'all'} label=\"Workout Day\" onChange={(e) => handleFilterChange('workoutDay', e.target.value)}>\n          <MenuItem value=\"all\">All Days</MenuItem>\n          {workoutDays.map((day) => (\n            <MenuItem key={day} value={day}>{day}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n 
|<   </Box>\n  );\n};\n\n/*---------------- Workout Table with Sparklines ----------------*/\nconst WorkoutTable = ({ workouts, allWorkouts, onRowClick }) => {\n  const theme = useTheme();\n  if (!workouts || workouts.length === 0)\n    return <Alert severity=\"info\" sx={{ mt: 2, borderRadius: 2 }}>No workouts match the selected filters.</Alert>;\n\n  const hasSteps = workouts.some(w => Number(w.steps) > 0);\n  const hasCadence = workouts.some(w => Number(w.cadence) > 0);\n\n  const smo
|<othArray = (arr) => {\n    if (!Array.isArray(arr) || arr.length === 0) return [];\n    return arr.map((v, i) => {\n      const prev = arr[i - 1] ?? v;\n      const next = arr[i + 1] ?? v;\n      return Math.round((v + prev + next) / 3);\n    });\n  };\n\n  return (\n    <TableContainer sx={{ maxHeight: 440, borderRadius: 2, border: `1px solid ${alpha(theme.palette.divider, 0.2)}` }}>\n      <Table stickyHeader aria-label=\"workout summary table\">\n        <TableHead>\n          <Tabl
|<eRow>\n            {['Date', 'Duration', 'Distance (km)', 'Avg Speed', 'Calories', 'Avg HR', 'HR Zones', 'Trends', 'Type', 'Actions'].map((header) => (\n              <TableCell key={header} sx={{ fontWeight: 'bold', bgcolor: 'grey.50' }}>{header}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {workouts.map((workout, idx) => {\n            // per-minute HR samples (preferred)\n            const hrSamples = getHrSamplesFromWorko
|<ut(workout); // [] if none\n            const hrTrendRaw = hrSamples.length ? hrSamples : getTrendForField(workout, allWorkouts, 'avgHR');\n            const hrSmoothed = smoothArray(hrTrendRaw);\n\n            // zone percentages (prefer per-segment samples)\n            const zonePercentagesFromSegments = getZonePercentagesFromSegments(workout);\n            // if not available, compute from hrSmoothed\n            const sourceForZones = zonePercentagesFromSegments ? null : hrSmoothe
|<d;\n            let zonePercentages = zonePercentagesFromSegments;\n            if (!zonePercentages) {\n              const zoneCounts = { z1: 0, z2: 0, z3: 0, z4: 0, z5: 0 };\n              sourceForZones.forEach(hr => {\n                if (hr >= 81 && hr <= 97) zoneCounts.z1++;\n                else if (hr >= 98 && hr <= 113) zoneCounts.z2++;\n                else if (hr >= 114 && hr <= 129) zoneCounts.z3++;\n                else if (hr >= 130 && hr <= 145) zoneCounts.z4++;\n      
|<          else if (hr >= 146 && hr <= 162) zoneCounts.z5++;\n              });\n              const total = sourceForZones.length || 0;\n              zonePercentages = total > 0\n                ? [\n                    (zoneCounts.z1 / total) * 100,\n                    (zoneCounts.z2 / total) * 100,\n                    (zoneCounts.z3 / total) * 100,\n                    (zoneCounts.z4 / total) * 100,\n                    (zoneCounts.z5 / total) * 100,\n                  ]\n        
|<        : [0, 0, 0, 0, 0];\n            }\n\n            // trends for distance & speed\n            const distanceTrendRaw = getTrendForField(workout, allWorkouts, 'distance');\n            const speedTrendRaw = getTrendForField(workout, allWorkouts, 'avgSpeed');\n\n            const toNums = (arr) => Array.isArray(arr) ? arr.map(v => {\n              const n = Number(v);\n              return Number.isFinite(n) ? n : 0;\n            }) : [];\n\n            const distNums = toNums(dis
|<tanceTrendRaw);\n            const speedNums = toNums(speedTrendRaw);\n\n            const minHR = hrTrendRaw.length ? Math.min(...hrTrendRaw).toFixed(0) : '-';\n            const maxHR = hrTrendRaw.length ? Math.max(...hrTrendRaw).toFixed(0) : '-';\n            const minDistance = distNums.length ? Math.min(...distNums).toFixed(1) : '-';\n            const maxDistance = distNums.length ? Math.max(...distNums).toFixed(1) : '-';\n            const minSpeed = speedNums.length ? Math.min(
|<...speedNums).toFixed(1) : '-';\n            const maxSpeed = speedNums.length ? Math.max(...speedNums).toFixed(1) : '-';\n\n            const totalPct = zonePercentages.reduce((a,b)=>a+b,0);\n            const showZones = totalPct > 0;\n\n            return (\n              <TableRow key={workout.date ?? idx} hover sx={{ '&:hover': { bgcolor: alpha(theme.palette.primary.main, 0.05) } }}>\n                <TableCell>{workout.date}</TableCell>\n                <TableCell>{workout.durati
|<on}</TableCell>\n                <TableCell>{typeof workout.distance === 'number' ? workout.distance.toFixed(2) : workout.distance ?? '-'}</TableCell>\n                <TableCell>{workout.avgSpeed ?? '-'} km/h</TableCell>\n                <TableCell>{workout.calories ?? '-'}</TableCell>\n                <TableCell>{workout.avgHR ?? '-'} bpm</TableCell>\n\n                {/* HR Zones */}\n                <TableCell>\n                  <Tooltip title={\n                    <Box>\n      
|<                {HR_ZONES.map((z, i) => (\n                        <div key={z.id}>{z.label}: {Math.round(zonePercentages[i])}%</div>\n                      ))}\n                    </Box>\n                  }>\n                    <Box sx={{ width: 60, height: 18, display: 'flex', borderRadius: 1, overflow: 'hidden', bgcolor: showZones ? 'transparent' : 'grey.200' }}>\n                      {showZones ? zonePercentages.map((p, i) => (\n                        <Box key={i}\n           
|<               sx={{\n                            flex: p || 0.01,\n                            minWidth: p > 0 ? '4px' : 0,\n                            backgroundColor: HR_ZONES[i].color,\n                            height: '100%',\n                          }}\n                        />\n                      )) : (\n                        <Box sx={{ width: '100%', bgcolor: 'grey.200', height: '100%' }} />\n                      )}\n                    </Box>\n                  <
|</Tooltip>\n                </TableCell>\n\n                {/* Trends */}\n                <TableCell>\n                  <Tooltip title={`Distance: ${minDistance}-${maxDistance} km | Speed: ${minSpeed}-${maxSpeed} km/h`}>\n                    <Box sx={{ width: 110, height: 40 }}>\n                      <Sparklines data={distNums.length ? distNums : [0]} width={110} height={20}>\n                        <SparklinesLine color=\"#42a5f5\" />\n                        <SparklinesSpots />\n
|<                      </Sparklines>\n                      <Sparklines data={speedNums.length ? speedNums : [0]} width={110} height={20}>\n                        <SparklinesLine color=\"#ff9800\" />\n                        <SparklinesSpots />\n                      </Sparklines>\n                    </Box>\n                  </Tooltip>\n                </TableCell>\n\n                <TableCell>\n                  <Chip label={workout.workoutDay} color={workout.workoutDay === 'Tuesda
|<y' ? 'primary' : 'secondary'} size=\"small\" variant=\"outlined\" />\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Tooltip title={workout.segments?.length ? 'View details' : 'No detailed data'}>\n                    <span>\n                      <IconButton onClick={() => onRowClick(workout)} disabled={!workout.segments?.length} size=\"small\">\n                        <Visibility />\n                      </IconButton>\n               
|<     </span>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\n/*---------------- Main Component ----------------*/\nexport default function WorkoutSummaryTable({ workouts: allWorkouts, loading = false, error = null, onRefresh }) {\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false
|<);\n  const theme = useTheme();\n\n  const { filters } = useFilters();\n  const filteredWorkouts = useFilteredWorkouts(allWorkouts);\n\n  const handleRowClick = useCallback((workout) => {\n    setSelectedWorkout(workout);\n    setModalOpen(true);\n  }, []);\n\n  const workoutDays = useMemo(\n    () => Array.from(new Set((allWorkouts || []).map((w) => w.workoutDay).filter(Boolean))).sort(),\n    [allWorkouts]\n  );\n\n  const stats = useMemo(() => {\n    const nonRestWorkouts = (filtere
|<dWorkouts || []).filter(w => w.workoutDay !== 'Rest');\n    const totalWorkouts = nonRestWorkouts.length;\n\n    const totalDistance = nonRestWorkouts.reduce((sum, w) => sum + (Number(w.distance) || 0), 0).toFixed(2);\n    const totalDuration = nonRestWorkouts.reduce((sum, w) => sum + convertDurationToMinutes(w.duration || 0), 0);\n    const avgDuration = totalWorkouts > 0 ? (totalDuration / totalWorkouts).toFixed(1) : 0;\n\n    const validHRWorkouts = nonRestWorkouts.filter(w => Numbe
|<r(w.avgHR) && Number(w.avgHR) > 0);\n    const avgHR = validHRWorkouts.length > 0\n      ? (validHRWorkouts.reduce((sum, w) => sum + Number(w.avgHR), 0) / validHRWorkouts.length).toFixed(0)\n      : 0;\n\n    // avg calories and steps (per workout)\n    const avgCalories = totalWorkouts > 0\n      ? Math.round(nonRestWorkouts.reduce((sum, w) => sum + (Number(w.calories) || 0), 0) / totalWorkouts)\n      : 0;\n\n    const avgSteps = totalWorkouts > 0\n      ? Math.round(nonRestWorkouts.
|<reduce((sum, w) => sum + (Number(w.steps) || 0), 0) / totalWorkouts)\n      : 0;\n\n    const validSpeedWorkouts = nonRestWorkouts.filter(w => Number(w.avgSpeed) && Number(w.avgSpeed) > 0);\n    const avgSpeed = validSpeedWorkouts.length > 0\n      ? (validSpeedWorkouts.reduce((sum, w) => sum + Number(w.avgSpeed), 0) / validSpeedWorkouts.length).toFixed(1)\n      : 0;\n\n    const validCadenceWorkouts = nonRestWorkouts.filter(w => Number(w.cadence) && Number(w.cadence) > 0);\n    const
|< avgCadence = validCadenceWorkouts.length > 0\n      ? (validCadenceWorkouts.reduce((sum, w) => sum + Number(w.cadence), 0) / validCadenceWorkouts.length).toFixed(0)\n      : 0;\n\n    return {\n      totalWorkouts,\n      totalDistance,\n      avgDuration,\n      avgHR,\n      avgSpeed,\n      avgCalories,\n      avgSteps,\n      avgCadence\n    };\n  }, [filteredWorkouts]);\n\n  const hasSteps = (allWorkouts || []).some(w => Number(w.steps) > 0);\n  const hasCadence = (allWorkouts ||
|< []).some(w => Number(w.cadence) > 0);\n\n  return (\n    <Paper sx={{ width: '100%', overflow: 'hidden', mt: 2, borderRadius: 2, boxShadow: '0 8px 32px rgba(0,0,0,0.05)', border: `1px solid ${alpha(theme.palette.divider, 0.1)}` }}>\n      <Box sx={{ p: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n          <Typography variant=\"h4\" fontWeight=\"bold\" color=\"primary\">\n            Workout Summary\n          </Typograph
|<y>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Tooltip title=\"Refresh data\">\n              <IconButton onClick={onRefresh} color=\"primary\" disabled={loading}>\n                <Refresh />\n              </IconButton>\n            </Tooltip>\n            <FilterList color=\"primary\" />\n            <Typography variant=\"body2\" color=\"primary\" fontWeight=\"medium\">\n              Filters\n            </Typography>\n          </Box>\n   
|<     </Box>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2, borderRadius: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        <FilterSection workoutDays={workoutDays} />\n\n        <Divider sx={{ my: 3 }} />\n\n        <Grid container spacing={2} sx={{ mb: 3 }}>\n          <Grid item xs={12} sm={6} md={3}>\n            <StatCard title=\"Total Workouts\" value={stats.totalWorkouts} icon={<DirectionsRun />} color=\"primary\" loading={loading} />
|<\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <StatCard title=\"Total Distance\" value={stats.totalDistance} icon={<TrendingUp />} color=\"secondary\" loading={loading} subtext=\"km\" />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <StatCard title=\"Avg Duration\" value={stats.avgDuration} icon={<AccessTime />} color=\"info\" loading={loading} subtext=\"minutes\" />\n          </Grid>\n          <Grid item xs={12} sm={6} m
|<d={3}>\n            <StatCard title=\"Avg Heart Rate\" value={stats.avgHR} icon={<Favorite />} color=\"error\" loading={loading} subtext=\"bpm\" />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <StatCard title=\"Avg Speed\" value={stats.avgSpeed} icon={<SpeedIcon />} color=\"warning\" loading={loading} subtext=\"km/h\" />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <StatCard title=\"Avg Calories\" value={stats.avgCalories}
|< icon={<LocalFireDepartment />} color=\"success\" loading={loading} />\n          </Grid>\n          {hasSteps && (\n            <Grid item xs={12} sm={6} md={3}>\n              <StatCard title=\"Avg Steps\" value={stats.avgSteps} icon={<DirectionsWalk />} color=\"info\" loading={loading} />\n            </Grid>\n          )}\n          {hasCadence && (\n            <Grid item xs={12} sm={6} md={3}>\n              <StatCard title=\"Avg Cadence\" value={stats.avgCadence} icon={<ShowChar
|<t />} color=\"secondary\" loading={loading} subtext=\"steps/min\" />\n            </Grid>\n          )}\n        </Grid>\n\n        {loading ? (\n          <Grid container spacing={2} sx={{ mt: 2 }}>\n            {[1, 2, 3, 4, 5].map((i) => (\n              <Grid item xs={12} key={i}>\n                <Skeleton variant=\"rectangular\" height={50} />\n              </Grid>\n            ))}\n          </Grid>\n        ) : (\n          <WorkoutTable workouts={filteredWorkouts} allWorkouts
|<={allWorkouts} onRowClick={handleRowClick} />\n        )}\n      </Box>\n\n      <WorkoutDetailModal workout={selectedWorkout} open={modalOpen} onClose={() => setModalOpen(false)} />\n    </Paper>\n  );\n}\n:q"
:.$d
|2,0,1757837933,,".$d"
:.,$
|2,0,1757747132,,".,$"
:643
|2,0,1757679457,,"643"
:372
|2,0,1757663950,,"372"
:111
|2,0,1757396093,,"111"
:19
|2,0,1757390374,,"19"
:282
|2,0,1757226240,,"282"
:299
|2,0,1757225972,,"299"
:246
|2,0,1757225691,,"246"
:219
|2,0,1757225036,,"219"
:215
|2,0,1757224886,,"215"
:nu
|2,0,1757224805,,"nu"
:set
|2,0,1757224802,,"set"
:221
|2,0,1757224713,,"221"
:224
|2,0,1757224675,,"224"
:234
|2,0,1757223259,,"234"
:180
|2,0,1757218415,,"180"
:320
|2,0,1757144707,,"320"
:1356
|2,0,1757135664,,"1356"
:1247,$y
|2,0,1757135430,,"1247,$y"
:946
|2,0,1757067948,,"946"
::x
|2,0,1756306687,,":x"
:highlight Normal ctermfg=white ctermbg=black
|2,0,1756306348,,"highlight Normal ctermfg=white ctermbg=black"
:set background=light
|2,0,1756306280,,"set background=light"
:set background=dark
|2,0,1756306274,,"set background=dark"
:syntax
|2,0,1756275121,,"syntax"
:wq
|2,0,1756264727,,"wq"
:dracula
|2,0,1756264661,,"dracula"
:152
|2,0,1756130269,,"152"
:40
|2,0,1756104840,,"40"
:s/pointStyle/pointRadius
|2,0,1756104312,,"s/pointStyle/pointRadius"
:%/pointStyle/pointRadius/
|2,0,1756104300,,"%/pointStyle/pointRadius/"
:s/pointStyle/pointRadius/
|2,0,1756104291,,"s/pointStyle/pointRadius/"
:s/pointStyle/pointRadius/g
|2,0,1756104285,,"s/pointStyle/pointRadius/g"
:179
|2,0,1756097102,,"179"
:178
|2,0,1756097079,,"178"
:161
|2,0,1756097011,,"161"
:158
|2,0,1756096966,,"158"
:144
|2,0,1756096945,,"144"
:s/HeartRateChartsB/HeartRateCharts/g
|2,0,1756095635,,"s/HeartRateChartsB/HeartRateCharts/g"
:52
|2,0,1756013519,,"52"
:537
|2,0,1755929721,,"537"
:!
|2,0,1755851094,,"!"
:31
|2,0,1755851078,,"31"
:70
|2,0,1755754749,,"70"
:32
|2,0,1755754061,,"32"
:64
|2,0,1755753931,,"64"
:53
|2,0,1755752952,,"53"
:101
|2,0,1755675395,,"101"
:a
|2,0,1755674915,,"a"
:18
|2,0,1755669365,,"18"
:134
|2,0,1755668961,,"134"
:33
|2,0,1755504695,,"33"
:/
|2,0,1755499952,,"/"

# Search String History (newest to oldest):
?/kana
|2,1,1761021268,47,"kana"
?/local.tim
|2,1,1760950317,47,"local.tim"
?/os
|2,1,1760857849,47,"os"
?/black
|2,1,1760854788,47,"black"
?/materi
|2,1,1760849763,47,"materi"
?/mater
|2,1,1760849701,47,"mater"
?/airline
|2,1,1760848988,47,"airline"
?/ocean
|2,1,1760847447,47,"ocean"
?/deep
|2,1,1760847440,47,"deep"
?/material
|2,1,1760847328,47,"material"
?/materia
|2,1,1760847309,47,"materia"
?/Workout
|2,1,1760771830,47,"Workout"
?/analyzer
|2,1,1760771457,47,"analyzer"
?/ana
|2,1,1760771382,47,"ana"
?/csv
|2,1,1760771334,47,"csv"
?/Log
|2,1,1760770985,47,"Log"
?/anal
|2,1,1760770845,47,"anal"
?/italic
|2,1,1760692748,47,"italic"
?/color
|2,1,1760683104,47,"color"
?/host
|2,1,1760680765,47,"host"
?/Path
|2,1,1760680063,47,"Path"
?/Nerd
|2,1,1760605556,47,"Nerd"
?/syntax
|2,1,1760507183,47,"syntax"
? ^" \a
|2,1,1760243223,,"^\" \\a"
?/y
|2,1,1760241546,47,"y"
?/Trend Analysis
|2,1,1760241503,47,"Trend Analysis"
?/Efficiency
|2,1,1760095156,47,"Efficiency"
?/efficiency
|2,1,1760095139,47,"efficiency"
?/efficiency_break
|2,1,1760095124,47,"efficiency_break"
?/process_hr_data
|2,1,1760079079,47,"process_hr_data"
?/color_drift_classification
|2,1,1760079023,47,"color_drift_classification"
?/efficiency_score
|2,1,1760078747,47,"efficiency_score"
?/Efficiency Score
|2,1,1760078717,47,"Efficiency Score"
?/colorbar
|2,1,1760078252,47,"colorbar"
?/col1
|2,1,1760075776,47,"col1"
?/create_zone2
|2,1,1760075720,47,"create_zone2"
?/process_hr
|2,1,1760075665,47,"process_hr"
?/context
|2,1,1760075573,47,"context"
?/Long
|2,1,1760070948,47,"Long"
?/LONG
|2,1,1760070945,47,"LONG"
? LONG
|2,1,1760070928,,"LONG"
?/Duration
|2,1,1760000650,47,"Duration"
?/Duration 
|2,1,1760000622,47,"Duration "
?/duration
|2,1,1760000131,47,"duration"
?/Distribution
|2,1,1759995645,47,"Distribution"
?/128
|2,1,1759993290,47,"128"
? A,
|2,1,1759990504,,"A,"
? A
|2,1,1759990415,,"A"
?/dataframe
|2,1,1759917531,47,"dataframe"
?/use_container_width
|2,1,1759846364,47,"use_container_width"
?/apply
|2,1,1759846008,47,"apply"
?/Filter
|2,1,1759846002,47,"Filter"
?/filters
|2,1,1759845993,47,"filters"
?/Bubble
|2,1,1759845515,47,"Bubble"
?/bubble
|2,1,1759845513,47,"bubble"
?/hover
|2,1,1759845389,47,"hover"
?/plot-container
|2,1,1759841789,47,"plot-container"
?/st.plot
|2,1,1759826715,47,"st.plot"
?/ploty
|2,1,1759826711,47,"ploty"
?/Analytics
|2,1,1759825770,47,"Analytics"
?/header
|2,1,1759825758,47,"header"
?/anchor
|2,1,1759825746,47,"anchor"
?/round
|2,1,1759823753,47,"round"
?/hover_data
|2,1,1759823533,47,"hover_data"
?/downloader
|2,1,1759823492,47,"downloader"
?/sidebar
|2,1,1759823467,47,"sidebar"
?/summary
|2,1,1759821099,47,"summary"
?/Dash
|2,1,1759646505,47,"Dash"
?/Dashboard
|2,1,1759646353,47,"Dashboard"
?/Fitness
|2,1,1759645643,47,"Fitness"
?/Heart Rate Zones
|2,1,1759642365,47,"Heart Rate Zones"
?/FavoriteI
|2,1,1759642259,47,"FavoriteI"
?/HR_ZONES
|2,1,1759641206,47,"HR_ZONES"
?/Alert
|2,1,1759641196,47,"Alert"
?/alert
|2,1,1759640940,47,"alert"
?/FavoriteIcon
|2,1,1759640781,47,"FavoriteIcon"
?/Health
|2,1,1759640543,47,"Health"
?/severity
|2,1,1759640472,47,"severity"
?/InfoOutlinedIcon
|2,1,1759640222,47,"InfoOutlinedIcon"
?/InfoOutline
|2,1,1759640205,47,"InfoOutline"
?/Alert Severity
|2,1,1759639778,47,"Alert Severity"
?/bgcolor
|2,1,1759639614,47,"bgcolor"
?/zone.color
|2,1,1759639564,47,"zone.color"
?/MuiTooltip
|2,1,1759639013,47,"MuiTooltip"
?/ChartTooltop
|2,1,1759638943,47,"ChartTooltop"
?/CharTooltip
|2,1,1759638934,47,"CharTooltip"
?/Tooltip
|2,1,1759638923,47,"Tooltip"
??MuiToolTip
|2,1,1759638792,63,"MuiToolTip"
?/MuiToolTip
|2,1,1759638781,47,"MuiToolTip"
?/Grid item
|2,1,1759638698,47,"Grid item"
?/h5
|2,1,1759638443,47,"h5"
?/Steps
|2,1,1759638255,47,"Steps"
?/steps
|2,1,1759637941,47,"steps"
??steps
|2,1,1759637787,63,"steps"
?/step
|2,1,1759637785,47,"step"
?/Avg HR
|2,1,1759637433,47,"Avg HR"
?/500
|2,1,1759637025,47,"500"
?/Table
|2,1,1759636677,47,"Table"
?/Incline
|2,1,1759636551,47,"Incline"
?/%
|2,1,1759636489,47,"%"
?/showZone
|2,1,1759575636,47,"showZone"
?/showHR
|2,1,1759575612,47,"showHR"
?/AdvancedFil
|2,1,1759574789,47,"AdvancedFil"
?/modalOpen
|2,1,1759574744,47,"modalOpen"
?/selected
|2,1,1759574692,47,"selected"
?/HR Zones
|2,1,1759573426,47,"HR Zones"
?/Heart
|2,1,1759573411,47,"Heart"
?/Heart Rate Zone Distribution
|2,1,1759572857,47,"Heart Rate Zone Distribution"
?/index
|2,1,1759572678,47,"index"
?/Heart Rate
|2,1,1759572482,47,"Heart Rate"
?/Segments
|2,1,1759571315,47,"Segments"
?/Total
|2,1,1759571289,47,"Total"
?/Age
|2,1,1759571277,47,"Age"
?/55
|2,1,1759569765,47,"55"
?/Mock
|2,1,1759569762,47,"Mock"
?/calculateTime
|2,1,1759568473,47,"calculateTime"
?/showComparison
|2,1,1759568375,47,"showComparison"
?/PREVIOUS
|2,1,1759568286,47,"PREVIOUS"
?/parseDuration
|2,1,1759568216,47,"parseDuration"
?/Previous
|2,1,1759568107,47,"Previous"
?/mock
|2,1,1759567735,47,"mock"
?/FormControlLabel
|2,1,1759567554,47,"FormControlLabel"
?/Multi
|2,1,1759567220,47,"Multi"
?/Download
|2,1,1759567138,47,"Download"
?/ToolTip
|2,1,1759566215,47,"ToolTip"
?/grid
|2,1,1759564291,47,"grid"
?/gird
|2,1,1759563638,47,"gird"
?/chart
|2,1,1759563409,47,"chart"
?/Zero
|2,1,1759563334,47,"Zero"
?/drawBorder
|2,1,1759563284,47,"drawBorder"
?/IconButton
|2,1,1759484369,47,"IconButton"
?/Toggle
|2,1,1759484336,47,"Toggle"
?/Performance Trends
|2,1,1759483137,47,"Performance Trends"
?/History
|2,1,1759483074,47,"History"
?/Detailed
|2,1,1759482921,47,"Detailed"
?/Performance
|2,1,1759482846,47,"Performance"
?/Performance Trends over Time
|2,1,1759482842,47,"Performance Trends over Time"
?/Perfomance Trends over
|2,1,1759482837,47,"Perfomance Trends over"
?/Replace
|2,1,1759482711,47,"Replace"
?/TrendingUp
|2,1,1759482327,47,"TrendingUp"
?/Trending
|2,1,1759482315,47,"Trending"
?/Enhanced
|2,1,1759482084,47,"Enhanced"
?/Performance Trends over
|2,1,1759482003,47,"Performance Trends over"
?/Performance Trend over
|2,1,1759481999,47,"Performance Trend over"
? rpm
|2,1,1759480187,,"rpm"
?/rpm
|2,1,1759480180,47,"rpm"
?/Correlation
|2,1,1759395213,47,"Correlation"
?/Training Load
|2,1,1759395203,47,"Training Load"
?/AppBar
|2,1,1759395171,47,"AppBar"
?/chartColor
|2,1,1759394471,47,"chartColor"
?/chartType
|2,1,1759393997,47,"chartType"
?/Full
|2,1,1759392574,47,"Full"
?/Heart Rate vs
|2,1,1759392532,47,"Heart Rate vs"
?/Interpretation
|2,1,1759390675,47,"Interpretation"
?/Performance Trend
|2,1,1759388322,47,"Performance Trend"
?/Grid
|2,1,1759387899,47,"Grid"
?/border
|2,1,1759387835,47,"border"
?/rgb
|2,1,1759387304,47,"rgb"
?/Cadence
|2,1,1759387090,47,"Cadence"
?/km/h
|2,1,1759385979,47,"km/h"
?/Distance
|2,1,1759385896,47,"Distance"
?/Best
|2,1,1759385612,47,"Best"
?/Tota
|2,1,1759385545,47,"Tota"
?/bpm
|2,1,1759385443,47,"bpm"
?/km
|2,1,1759385430,47,"km"
?/KM
|2,1,1759385428,47,"KM"
?/fontWeight
|2,1,1759383560,47,"fontWeight"
?/Zone
|2,1,1759383016,47,"Zone"
?/Zone 2
|2,1,1759382889,47,"Zone 2"
?/Analysis
|2,1,1759305213,47,"Analysis"
?/Sleep
|2,1,1759305198,47,"Sleep"
?/Data
|2,1,1759305177,47,"Data"
?/TABLE
|2,1,1759305021,47,"TABLE"
?/DATA
|2,1,1759305018,47,"DATA"
?/table
|2,1,1759304942,47,"table"
?/DATA TABLE
|2,1,1759304931,47,"DATA TABLE"
?/Paper
|2,1,1759303259,47,"Paper"
?/Workout Analytics
|2,1,1759303213,47,"Workout Analytics"
?/Date range
|2,1,1759303204,47,"Date range"
?/days
|2,1,1759300920,47,"days"
?/30D
|2,1,1759300868,47,"30D"
?/3D
|2,1,1759300864,47,"3D"
?/avgDuration
|2,1,1759297651,47,"avgDuration"
?/avgHeartRate
|2,1,1759297518,47,"avgHeartRate"
?/durationIn
|2,1,1759297410,47,"durationIn"
?/currentPeriodData
|2,1,1759297368,47,"currentPeriodData"
?/Workout Duration
|2,1,1759297195,47,"Workout Duration"
?/doughnutOptions
|2,1,1759296964,47,"doughnutOptions"
?/intensityZonesData
|2,1,1759296773,47,"intensityZonesData"
?/key: workoutType
|2,1,1759296476,47,"key: workoutType"
?/dateStr
|2,1,1759296456,47,"dateStr"
?/110
|2,1,1759296450,47,"110"
?/100
|2,1,1759296437,47,"100"
?/key
|2,1,1759296300,47,"key"
?/workoutType
|2,1,1759296258,47,"workoutType"
?/DataTable
|2,1,1759296082,47,"DataTable"
?/dought
|2,1,1759295316,47,"dought"
?/round1
|2,1,1759295194,47,"round1"
?/calculateSleepScore
|2,1,1759295077,47,"calculateSleepScore"
?/currentPeriodData.map
|2,1,1759294897,47,"currentPeriodData.map"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):
@n
|2,3,1760849226,,"n"

# Debug Line History (newest to oldest):

# Registers:
"0	LINE	0
	cp -rv ~/.config/nvim "$DOTFILES_DIR/.config/" 2>/dev/null
|3,0,0,1,1,0,1761279814,"cp -rv ~/.config/nvim \"$DOTFILES_DIR/.config/\" 2>/dev/null"
"1	LINE	0
	#!/bin/bash
	# fresh_dotfiles.sh
	# Purpose: Copy essential dotfiles into a clean dotfiles folder for Git
	
	# 1️⃣ Set up paths
	DOTFILES_DIR="$HOME/dotfiles"          # target folder for new repo
	mkdir -p "$DOTFILES_DIR"
	mkdir -p "$DOTFILES_DIR/.config"       # ensure .config exists
	
	# 2️⃣ Copy shell and prompt configs
	cp -v ~/.bash_profile ~/.bashrc ~/.zshrc ~/.p10k.zsh "$DOTFILES_DIR" 2>/dev/null
	cp -v ~/.fzf.bash ~/.fzf.zsh "$DOTFILES_DIR" 2>/dev/null
	cp -v ~/.iterm2_shell_integration.zsh "$DOTFILES_DIR" 2>/dev/null
	
	# 3️⃣ Copy Git configs (skip credentials!)
	cp -v ~/.gitconfig ~/.gitignore "$DOTFILES_DIR" 2>/dev/null
	
	# 4️⃣ Copy Tmux configs
	cp -v ~/.tmux.conf ~/.tmux.conf.local "$DOTFILES_DIR" 2>/dev/null
	
	# 5️⃣ Copy Vim/Neovim/alacritty configs
	cp -v ~/.vimrc.local ~/.vimrc.bundles.local ~/.viminfo "$DOTFILES_DIR" 2>/dev/null
	cp -rv ~/.config/alacritty "$DOTFILES_DIR/.config/" 2>/dev/null
	cp -rv ~/.config/nvim "$DOTFILES_DIR/.config/" 2>/dev/null
	
	# 6️⃣ Summary
	echo "✅ Dotfiles copied to $DOTFILES_DIR"
	echo "Next steps:"
	echo "  cd $DOTFILES_DIR"
	echo "  git init"
	echo "  git branch -M main"
	echo "  git remote add origin git@github.com:dirardm/dotfiles.git"
	echo "  git add ."
	echo "  git commit -m 'Initial clean dotfiles snapshot'"
	echo "  git push -u origin main --force"
	
|3,0,1,1,36,0,1761279787,"#!/bin/bash","# fresh_dotfiles.sh","# Purpose: Copy essential dotfiles into a clean dotfiles folder for Git","","# 1️⃣ Set up paths","DOTFILES_DIR=\"$HOME/dotfiles\"          # target folder for new repo","mkdir -p \"$DOTFILES_DIR\"","mkdir -p \"$DOTFILES_DIR/.config\"       # ensure .config exists","","# 2️⃣ Copy shell and prompt configs","cp -v ~/.bash_profile ~/.bashrc ~/.zshrc ~/.p10k.zsh \"$DOTFILES_DIR\" 2>/dev/null",>60
|<"cp -v ~/.fzf.bash ~/.fzf.zsh \"$DOTFILES_DIR\" 2>/dev/null","cp -v ~/.iterm2_shell_integration.zsh \"$DOTFILES_DIR\" 2>/dev/null","","# 3️⃣ Copy Git configs (skip credentials!)","cp -v ~/.gitconfig ~/.gitignore \"$DOTFILES_DIR\" 2>/dev/null","","# 4️⃣ Copy Tmux configs","cp -v ~/.tmux.conf ~/.tmux.conf.local \"$DOTFILES_DIR\" 2>/dev/null","","# 5️⃣ Copy Vim/Neovim/alacritty configs","cp -v ~/.vimrc.local ~/.vimrc.bundles.local ~/.viminfo \"$DOTFILES_DIR\" 2>/dev/null",>67
|<"cp -rv ~/.config/alacritty \"$DOTFILES_DIR/.config/\" 2>/dev/null","cp -rv ~/.config/nvim \"$DOTFILES_DIR/.config/\" 2>/dev/null","","# 6️⃣ Summary","echo \"✅ Dotfiles copied to $DOTFILES_DIR\"","echo \"Next steps:\"","echo \"  cd $DOTFILES_DIR\"","echo \"  git init\"","echo \"  git branch -M main\"","echo \"  git remote add origin git@github.com:dirardm/dotfiles.git\"","echo \"  git add .\"","echo \"  git commit -m 'Initial clean dotfiles snapshot'\"",>44
|<"echo \"  git push -u origin main --force\"",""
"2	LINE	0
	cp -rv ~/.config/nvim "$DOTFILES_DIR/.config/" 2>/dev/null
|3,0,2,1,1,0,1761279566,"cp -rv ~/.config/nvim \"$DOTFILES_DIR/.config/\" 2>/dev/null"
"3	LINE	0
	
|3,0,3,1,1,0,1761279190,""
"4	LINE	0
	alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
|3,0,4,1,1,0,1761279188,"alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'"
"5	LINE	0
	#!/usr/bin/env bash
	
	# ---------------------------------------
	# ~/.local/bin/dotfiles-sync.sh
	# Fast, safe dotfiles sync
	# ---------------------------------------
	
	# Config
	GIT_DIR="$HOME/.dotfiles/"
	WORK_TREE="$HOME"
	LOG_FILE="$HOME/.dotfiles-sync.log"
	
	# List of dotfiles to track
	DOTFILES=(
	  ".zshrc"
	  ".zprofile"
	  ".p10k.zsh"
	  ".vimrc"
	  ".config/alacritty"
	  ".local/bin"
	  "bin"
	  "powerlevel10k"
	)
	
	# Paths to ignore (large files or frequently changing)
	IGNORE_PATHS=(
	  ".vim/plugged.backup"
	  ".local/state/nvim"
	  "Fitness-tools"
	  ".keras"
	  "Applications/WebCatalog Apps"
	  "Samsung-Health-Analysis"
	)
	
	# Helper to check if a file is ignored
	is_ignored() {
	  local f="$1"
	  for i in "${IGNORE_PATHS[@]}"; do
	    [[ "$f" == "$i"* ]] && return 0
	  done
	  return 1
	}
	
	echo "📦 Starting dotfiles sync: $(date)" | tee -a "$LOG_FILE"
	
	# Navigate to home directory
	cd "$HOME" || exit 1
	
	# Stage files
	for file in "${DOTFILES[@]}"; do
|3,0,5,1,50,0,1761277438,"#!/usr/bin/env bash","","# ---------------------------------------","# ~/.local/bin/dotfiles-sync.sh","# Fast, safe dotfiles sync","# ---------------------------------------","","# Config","GIT_DIR=\"$HOME/.dotfiles/\"","WORK_TREE=\"$HOME\"","LOG_FILE=\"$HOME/.dotfiles-sync.log\"","","# List of dotfiles to track","DOTFILES=(","  \".zshrc\"","  \".zprofile\"","  \".p10k.zsh\"","  \".vimrc\"","  \".config/alacritty\"",>18
|<"  \".local/bin\"","  \"bin\"","  \"powerlevel10k\"",")","","# Paths to ignore (large files or frequently changing)","IGNORE_PATHS=(","  \".vim/plugged.backup\"","  \".local/state/nvim\"","  \"Fitness-tools\"","  \".keras\"","  \"Applications/WebCatalog Apps\"","  \"Samsung-Health-Analysis\"",")","","# Helper to check if a file is ignored","is_ignored() {","  local f=\"$1\"","  for i in \"${IGNORE_PATHS[@]}\"; do","    [[ \"$f\" == \"$i\"* ]] && return 0","  done","  return 1","}","",>70
|<"echo \"📦 Starting dotfiles sync: $(date)\" | tee -a \"$LOG_FILE\"","","# Navigate to home directory","cd \"$HOME\" || exit 1","","# Stage files","for file in \"${DOTFILES[@]}\"; do"
"6	LINE	0
	#!/usr/bin/env bash
	# ~/.local/bin/dotfiles-sync.sh
	# Daily dotfiles sync (fast, verbose, safe)
	
	set -euo pipefail
	
	# --- Configuration ---
	GIT_DIR="$HOME/.dotfiles"
	WORK_TREE="$HOME"
	LOG_FILE="$HOME/.dotfiles-sync.log"
	
	# Define only the dotfiles and directories you want to track
	DOTFILES=(
	  ".zshrc"
	  ".zprofile"
	  ".p10k.zsh"
	  ".vimrc"
	  ".tmux.conf"
	  ".gitconfig"
	  ".config"
	  ".local/bin"
	  "bin"
	  "powerlevel10k"
	)
	
	# Directories to explicitly ignore (optional, also use .gitignore)
	IGNORED=(
	  ".keras"
	  "Applications/WebCatalog Apps"
	  "Samsung-Health-Analysis"
	  ".vim/plugged.backup"
	  "Fitness-tools"
	  "dotfiles-temp"
	)
	
	# --- Start Sync ---
	echo "📦 Starting dotfiles sync: $(date)" | tee -a "$LOG_FILE"
	
	# Navigate home
	cd "$HOME" || exit 1
	
	# Add files
	for file in "${DOTFILES[@]}"; do
	    if [ -e "$WORK_TREE/$file" ]; then
	        echo "Adding: $file" | tee -a "$LOG_FILE"
	        git --git-dir="$GIT_DIR" --work-tree="$WORK_TREE" add -vf "$file"
	    else
	        echo "Skipping missing: $file" | tee -a "$LOG_FILE"
	    fi
	done
|3,0,6,1,50,0,1761277336,"#!/usr/bin/env bash","# ~/.local/bin/dotfiles-sync.sh","# Daily dotfiles sync (fast, verbose, safe)","","set -euo pipefail","","# --- Configuration ---","GIT_DIR=\"$HOME/.dotfiles\"","WORK_TREE=\"$HOME\"","LOG_FILE=\"$HOME/.dotfiles-sync.log\"","","# Define only the dotfiles and directories you want to track","DOTFILES=(","  \".zshrc\"","  \".zprofile\"","  \".p10k.zsh\"","  \".vimrc\"","  \".tmux.conf\"","  \".gitconfig\"",>15
|<"  \".config\"","  \".local/bin\"","  \"bin\"","  \"powerlevel10k\"",")","","# Directories to explicitly ignore (optional, also use .gitignore)","IGNORED=(","  \".keras\"","  \"Applications/WebCatalog Apps\"","  \"Samsung-Health-Analysis\"","  \".vim/plugged.backup\"","  \"Fitness-tools\"","  \"dotfiles-temp\"",")","","# --- Start Sync ---","echo \"📦 Starting dotfiles sync: $(date)\" | tee -a \"$LOG_FILE\"","","# Navigate home","cd \"$HOME\" || exit 1","","# Add files",>36
|<"for file in \"${DOTFILES[@]}\"; do","    if [ -e \"$WORK_TREE/$file\" ]; then","        echo \"Adding: $file\" | tee -a \"$LOG_FILE\"","        git --git-dir=\"$GIT_DIR\" --work-tree=\"$WORK_TREE\" add -vf \"$file\"","    else","        echo \"Skipping missing: $file\" | tee -a \"$LOG_FILE\"","    fi","done"
"7	LINE	0
	
|3,0,7,1,1,0,1761277013,""
"8	LINE	0
	#!/usr/bin/env bash
	# ~/.local/bin/dotfiles-sync.sh
	
	set -euo pipefail
	
	# Dotfiles git environment
	GIT_DIR="$HOME/.dotfiles"
	WORK_TREE="$HOME"
	
	# Files/folders to track (adjust this list)
	DOTFILES=(
	    ".zshrc"
	    ".zprofile"
	    ".p10k.zsh"
	    ".vimrc"
	    ".vim"
	    ".config"
	    ".local/bin"
	    "powerlevel10k"
	    "bin"
	)
	
	echo "📦 Starting dotfiles sync: $(date)"
	
	# Navigate to home directory
	cd "$HOME" || exit 1
	
	# Loop through dotfiles
	for file in "${DOTFILES[@]}"; do
	    if [ -e "$WORK_TREE/$file" ]; then
	        echo "Adding: $file"
	        git --git-dir="$GIT_DIR" --work-tree="$WORK_TREE" add -vf "$file"
	    else
	        echo "Skipping missing: $file"
	    fi
	done
	
	# Commit changes with timestamp
	echo "Committing changes..."
	git --git-dir="$GIT_DIR" --work-tree="$WORK_TREE" commit -m "Auto-update: $(date '+%Y-%m-%d %H:%M:%S')" \
	    && echo "Commit successful." \
	    || echo "No changes to commit."
	
	# Push to remote
	echo "Pushing to origin main..."
	git --git-dir="$GIT_DIR" --work-tree="$WORK_TREE" push origin main --verbose
	
	echo "✅ Dotfiles sync completed."
|3,0,8,1,48,0,1761277000,"#!/usr/bin/env bash","# ~/.local/bin/dotfiles-sync.sh","","set -euo pipefail","","# Dotfiles git environment","GIT_DIR=\"$HOME/.dotfiles\"","WORK_TREE=\"$HOME\"","","# Files/folders to track (adjust this list)","DOTFILES=(","    \".zshrc\"","    \".zprofile\"","    \".p10k.zsh\"","    \".vimrc\"","    \".vim\"","    \".config\"","    \".local/bin\"","    \"powerlevel10k\"","    \"bin\"",")","",>47
|<"echo \"📦 Starting dotfiles sync: $(date)\"","","# Navigate to home directory","cd \"$HOME\" || exit 1","","# Loop through dotfiles","for file in \"${DOTFILES[@]}\"; do","    if [ -e \"$WORK_TREE/$file\" ]; then","        echo \"Adding: $file\"","        git --git-dir=\"$GIT_DIR\" --work-tree=\"$WORK_TREE\" add -vf \"$file\"","    else","        echo \"Skipping missing: $file\"","    fi","done","","# Commit changes with timestamp","echo \"Committing changes...\"",>114
|<"git --git-dir=\"$GIT_DIR\" --work-tree=\"$WORK_TREE\" commit -m \"Auto-update: $(date '+%Y-%m-%d %H:%M:%S')\" \\","    && echo \"Commit successful.\" \\","    || echo \"No changes to commit.\"","","# Push to remote","echo \"Pushing to origin main...\"","git --git-dir=\"$GIT_DIR\" --work-tree=\"$WORK_TREE\" push origin main --verbose","","echo \"✅ Dotfiles sync completed.\""
"9	LINE	0
	)
|3,0,9,1,1,0,1761276639,")"
""-	CHAR	0
	m
|3,1,36,0,1,0,1761279827,"m"

# File marks:
'0  34  26  ~/.local/bin/setup_dotfiles.sh
|4,48,34,26,1761279829,"~/.local/bin/setup_dotfiles.sh"
'1  62  0  ~/.local/bin/fresh_dotfiles.sh
|4,49,62,0,1761279790,"~/.local/bin/fresh_dotfiles.sh"
'2  1  19  ~/.local/bin/fresh_dotfiles.sh
|4,50,1,19,1761279657,"~/.local/bin/fresh_dotfiles.sh"
'3  23  19  ~/.local/bin/fresh_dotfiles.sh
|4,51,23,19,1761279657,"~/.local/bin/fresh_dotfiles.sh"
'4  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,52,1,0,1761279577,"~/.local/bin/fresh_dotfiles.sh"
'5  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,53,1,0,1761279577,"~/.local/bin/fresh_dotfiles.sh"
'6  24  0  ~/.local/bin/fresh_dotfiles.sh
|4,54,24,0,1761279577,"~/.local/bin/fresh_dotfiles.sh"
'7  24  0  ~/.local/bin/fresh_dotfiles.sh
|4,55,24,0,1761279577,"~/.local/bin/fresh_dotfiles.sh"
'8  1  34  ~/.local/bin/fresh_dotfiles.sh
|4,56,1,34,1761279540,"~/.local/bin/fresh_dotfiles.sh"
'9  1  34  ~/.local/bin/fresh_dotfiles.sh
|4,57,1,34,1761279540,"~/.local/bin/fresh_dotfiles.sh"

# Jumplist (newest first):
-'  34  26  ~/.local/bin/setup_dotfiles.sh
|4,39,34,26,1761279829,"~/.local/bin/setup_dotfiles.sh"
-'  1  0  ~/.local/bin/setup_dotfiles.sh
|4,39,1,0,1761279807,"~/.local/bin/setup_dotfiles.sh"
-'  62  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,62,0,1761279790,"~/.local/bin/fresh_dotfiles.sh"
-'  62  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,62,0,1761279790,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279787,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279787,"~/.local/bin/fresh_dotfiles.sh"
-'  23  19  ~/.local/bin/fresh_dotfiles.sh
|4,39,23,19,1761279657,"~/.local/bin/fresh_dotfiles.sh"
-'  23  19  ~/.local/bin/fresh_dotfiles.sh
|4,39,23,19,1761279657,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279648,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279648,"~/.local/bin/fresh_dotfiles.sh"
-'  24  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,24,0,1761279577,"~/.local/bin/fresh_dotfiles.sh"
-'  24  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,24,0,1761279577,"~/.local/bin/fresh_dotfiles.sh"
-'  24  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,24,0,1761279577,"~/.local/bin/fresh_dotfiles.sh"
-'  24  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,24,0,1761279577,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279557,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279557,"~/.local/bin/fresh_dotfiles.sh"
-'  21  34  ~/.local/bin/fresh_dotfiles.sh
|4,39,21,34,1761279540,"~/.local/bin/fresh_dotfiles.sh"
-'  21  34  ~/.local/bin/fresh_dotfiles.sh
|4,39,21,34,1761279540,"~/.local/bin/fresh_dotfiles.sh"
-'  21  34  ~/.local/bin/fresh_dotfiles.sh
|4,39,21,34,1761279540,"~/.local/bin/fresh_dotfiles.sh"
-'  21  34  ~/.local/bin/fresh_dotfiles.sh
|4,39,21,34,1761279540,"~/.local/bin/fresh_dotfiles.sh"
-'  21  34  ~/.local/bin/fresh_dotfiles.sh
|4,39,21,34,1761279540,"~/.local/bin/fresh_dotfiles.sh"
-'  21  34  ~/.local/bin/fresh_dotfiles.sh
|4,39,21,34,1761279540,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279516,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279516,"~/.local/bin/fresh_dotfiles.sh"
-'  20  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,20,0,1761279461,"~/.local/bin/fresh_dotfiles.sh"
-'  20  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,20,0,1761279461,"~/.local/bin/fresh_dotfiles.sh"
-'  20  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,20,0,1761279461,"~/.local/bin/fresh_dotfiles.sh"
-'  20  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,20,0,1761279461,"~/.local/bin/fresh_dotfiles.sh"
-'  20  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,20,0,1761279461,"~/.local/bin/fresh_dotfiles.sh"
-'  20  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,20,0,1761279461,"~/.local/bin/fresh_dotfiles.sh"
-'  20  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,20,0,1761279461,"~/.local/bin/fresh_dotfiles.sh"
-'  20  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,20,0,1761279461,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279445,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279445,"~/.local/bin/fresh_dotfiles.sh"
-'  36  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,36,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  35  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,35,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  36  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,36,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  35  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,35,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  36  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,36,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  35  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,35,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  36  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,36,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  35  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,35,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  36  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,36,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  35  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,35,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  36  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,36,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  35  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,35,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  36  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,36,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  35  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,35,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  36  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,36,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  35  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,35,0,1761279357,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279356,"~/.local/bin/fresh_dotfiles.sh"
-'  1  0  ~/.local/bin/fresh_dotfiles.sh
|4,39,1,0,1761279356,"~/.local/bin/fresh_dotfiles.sh"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"
-'  271  0  ~/.zshrc
|4,39,271,0,1761279194,"~/.zshrc"

# History of marks within files (newest to oldest):

> ~/.local/bin/setup_dotfiles.sh
	*	1761279828	0
	"	34	26
	^	34	26
	.	34	26
	+	35	0
	+	34	26

> ~/.local/bin/fresh_dotfiles.sh
	*	1761279788	0
	"	62	0
	^	62	0
	.	61	101
	+	1	40
	+	1	25
	+	1	34
	+	1	0
	+	1	11
	+	61	101

> ~/.zshrc
	*	1761279190	0
	"	271	0
	^	9	59
	.	272	0
	+	256	97
	+	259	0
	+	256	0
	+	259	84
	+	259	0
	+	257	203
	+	257	0
	+	258	17
	+	258	0
	+	257	13
	+	257	0
	+	258	0
	+	9	89
	+	9	88
	+	10	0
	+	9	120
	+	9	58
	+	9	39
	+	9	60
	+	9	59
	+	10	0
	+	9	59
	+	257	0
	+	258	0
	+	272	0

> ~/.dotfiles/.gitignore
	*	1761277866	0
	"	1	12
	^	7	13
	.	7	12
	+	7	12

> ~/.local/bin/dotfiles-sync.sh
	*	1761277438	0
	"	50	0
	^	50	0
	.	49	35
	+	1	19
	+	1	34
	+	1	0
	+	1	19
	+	1	35
	+	1	0
	+	1	19
	+	1	64
	+	1	10
	+	1	19
	+	49	35

> ~/.config/alacritty/alacritty.toml
	*	1761025361	0
	"	2	57
	^	2	58
	.	2	57
	+	46	0
	+	1	0
	+	46	0
	+	1	7
	+	46	10
	+	46	0
	+	1	19
	+	46	0
	+	1	19
	+	46	0
	+	1	64
	+	46	0
	+	46	1
	+	46	0
	+	46	27
	+	46	0
	+	46	11
	+	46	25
	+	46	0
	+	46	25
	+	46	0
	+	1	0
	+	46	24
	+	31	0
	+	31	30
	+	31	48
	+	31	68
	+	31	89
	+	31	108
	+	31	130
	+	31	149
	+	31	168
	+	31	10
	+	31	30
	+	31	48
	+	31	68
	+	31	89
	+	31	108
	+	31	130
	+	31	149
	+	31	168
	+	31	0
	+	46	0
	+	38	10
	+	45	1
	+	46	0
	+	11	24
	+	11	0
	+	46	0
	+	11	0
	+	1	0
	+	2	0
	+	2	81
	+	46	0
	+	2	77
	+	2	53
	+	2	78
	+	2	77
	+	2	81
	+	2	53
	+	2	74
	+	2	73
	+	2	81
	+	6	0
	+	2	53
	+	2	65
	+	2	67
	+	2	66
	+	6	0
	+	2	53
	+	3	5
	+	5	39
	+	5	0
	+	10	0
	+	5	0
	+	11	0
	+	2	57

> ~/.config/kitty/kitty.conf
	*	1761024935	0
	"	1	0

> ~/.config/nvim/init.lua.onedarkpro
	*	1761022994	0
	"	236	58
	^	236	59
	.	236	58
	+	1	43
	+	236	58

> ~/.config/nvim/lua/plugins/colorscheme.lua
	*	1761022928	0
	"	1	0
	.	32	0
	+	1	8
	+	1698	1
	+	1667	1
	+	1	45
	+	1	63
	+	1	45
	+	1	0
	+	1	45
	+	1	0
	+	1	20
	+	1	0
	+	1	20
	+	1	0
	+	1	32
	+	1	25
	+	1	0
	+	1	36
	+	1662	0
	+	1116	2
	+	1	0
	+	572	1
	+	1	45
	+	1	8
	+	1	0
	+	1	45
	+	1	0
	+	34	0
	+	1	2
	+	1	33
	+	1	0
	+	1	43
	+	1	1
	+	1	31
	+	1	0
	+	1	21
	+	1	33
	+	1	7
	+	1	64
	+	1	8
	+	1	1
	+	34	0
	+	32	0

> ~/.config/nvim/lua/plugins/airline.lua
	*	1761022917	0
	"	1	0
	^	10	54
	.	10	53
	+	1	41
	+	1	1
	+	1	0
	+	1	8
	+	1	41
	+	1	24
	+	1	8
	+	1	0
	+	1	8
	+	1	0
	+	1	52
	+	1	57
	+	1	8
	+	25	0
	+	10	53

> ~/.config/nvim/init.lua
	*	1761021649	0
	"	23	0
	^	71	80
	.	71	0
	+	847	30
	+	847	0
	+	847	1
	+	847	0
	+	847	32
	+	847	0
	+	847	32
	+	847	0
	+	847	3
	+	847	0
	+	826	38
	+	825	1
	+	826	0
	+	825	0
	+	826	1
	+	847	6
	+	847	0
	+	846	6
	+	846	2
	+	830	0
	+	831	0
	+	832	0
	+	833	0
	+	834	0
	+	835	0
	+	836	0
	+	837	0
	+	838	0
	+	839	0
	+	840	0
	+	841	0
	+	842	0
	+	843	0
	+	844	0
	+	845	0
	+	846	0
	+	826	0
	+	829	0
	+	825	0
	+	829	0
	+	846	2
	+	831	0
	+	836	34
	+	836	0
	+	841	62
	+	841	0
	+	846	0
	+	841	0
	+	827	90
	+	827	0
	+	829	0
	+	827	39
	+	827	37
	+	828	30
	+	827	0
	+	828	0
	+	816	30
	+	813	0
	+	823	57
	+	820	0
	+	825	0
	+	812	1
	+	821	0
	+	812	0
	+	821	0
	+	812	0
	+	813	0
	+	816	0
	+	819	0
	+	817	0
	+	812	1
	+	813	1
	+	816	1
	+	1	36
	+	1	3
	+	1	0
	+	1	4
	+	1	38
	+	1	0
	+	1	29
	+	1	32
	+	1	59
	+	779	62
	+	1	43
	+	1	51
	+	1	43
	+	1	51
	+	1	43
	+	663	51
	+	569	32
	+	482	14
	+	568	1
	+	482	0
	+	569	0
	+	495	36
	+	437	52
	+	219	51
	+	69	57
	+	71	80
	+	71	0

> ~/.config/nvim/lua/plugins/ui.lua
	*	1761021268	0
	"	1	0
	^	47	1
	.	47	0
	+	1	36
	+	1	8
	+	1	21
	+	1	8
	+	47	0

> ~/.config/nvim/lua/plugins/init.lua
	*	1761021260	0
	"	1	0
	^	84	1
	.	84	0
	+	84	0

> ~/.config/alacritty/alacritty.yaml
	*	1760961188	0
	"	12	2
	.	13	0
	+	13	0
	+	2	0
	+	12	10
	+	2	64
	+	13	24
	+	13	0
	+	13	23
	+	13	0

> ~/alacritty.yaml
	*	1760960604	0
	"	1	0

> ~/.vimrc
	*	1760882918	0
	"	81	3
	^	78	4
	.	78	3
	+	1	0
	+	1	57
	+	1	0
	+	1	97
	+	1	0
	+	81	0
	+	1	29
	+	1	25
	+	1	74
	+	1	0
	+	1	39
	+	1	0
	+	1	40
	+	1	0
	+	1	34
	+	1	0
	+	1	21
	+	1	0
	+	1	44
	+	1	0
	+	1	44
	+	1	0
	+	1	41
	+	1	0
	+	1	43
	+	1	0
	+	1	18
	+	80	5
	+	67	0
	+	40	43
	+	41	0
	+	46	41
	+	71	33
	+	67	38
	+	67	0
	+	51	0
	+	67	0
	+	67	37
	+	67	0
	+	52	34
	+	67	37
	+	52	0
	+	67	0
	+	67	37
	+	52	0
	+	67	0
	+	67	40
	+	67	0
	+	67	40
	+	67	37
	+	67	0
	+	66	37
	+	53	0
	+	67	0
	+	67	20
	+	67	0
	+	67	20
	+	67	0
	+	79	3
	+	80	3
	+	77	3
	+	79	0
	+	76	4
	+	67	0
	+	80	39
	+	76	0
	+	80	38
	+	68	0
	+	81	0
	+	68	0
	+	80	0
	+	78	34
	+	79	0
	+	78	39
	+	5	0
	+	6	45
	+	7	28
	+	7	0
	+	79	39
	+	8	27
	+	79	0
	+	78	1
	+	80	1
	+	78	0
	+	80	0
	+	81	23
	+	50	0
	+	49	0
	+	50	28
	+	11	0
	+	50	0
	+	49	0
	+	80	0
	+	81	0
	+	80	3
	+	79	0
	+	78	0
	+	77	0
	+	76	0
	+	78	3

> ~/alacritty.toml
	*	1760877274	0
	"	1	0

> ~/.config/nvim/lua/plugins/lualine.lua
	*	1760855387	0
	"	47	2
	.	48	0
	+	48	0
	+	47	3
	+	48	0

> ~/Fitness-tools/Data/MetrixFlow/streamlit/computeCorrelation.py
	*	1760795642	0
	"	579	9
	^	579	10
	.	579	9
	+	1	22
	+	1	3
	+	1	22
	+	1	83
	+	1	22
	+	2853	9
	+	2315	9
	+	2035	9
	+	1	22
	+	1496	9
	+	591	0
	+	592	0
	+	1	22
	+	579	9

> ~/Fitness-tools/Data/MetrixFlow/computeCorrelation.py
	*	1760772077	0
	"	488	9
	^	488	10
	.	488	9
	+	1	19
	+	1	0
	+	1	19
	+	1	2
	+	1	19
	+	488	9

> ~/Fitness-tools/Data/Incline/incline_data_load.py
	*	1760769541	0
	"	56	0
	^	56	0
	.	55	50
	+	101	1
	+	1	48
	+	1	14
	+	1	63
	+	1	33
	+	1	0
	+	1	47
	+	1	0
	+	1	14
	+	55	50

> ~/.config/nvim/lua/init.lua
	*	1760692151	0
	"	1	0

> ~/.config/nvim/init.lua.bak
	*	1760688944	0
	"	112	0

> ~/test_tokyonight.lua
	*	1760686790	0
	"	8	0

> ~/t.lua
	*	1760686714	0
	"	15	0
	^	15	0
	.	15	0
	+	46	1
	+	32	1
	+	16	2
	+	15	0

> ~/.config/nvim/lua/plugins/NERD_tree_tab_1
	*	1760686559	0
	"	4	0
	.	1	0
	+	1	0

> ~/init.lua
	*	1760685877	0
	"	1	0

> ~/.config/neovide/init.lua
	*	1760684959	0
	"	1	0
	^	2	32
	.	1	0
	+	2	31
	+	1	0

> ~/.config/nvim/lua/plugins/material.lua
	*	1760682763	0
	"	22	0
	^	22	0
	.	21	1
	+	21	1

> ~/NERD_tree_tab_1
	*	1760606567	0
	"	4	0
	.	1	0
	+	1	0

> ~/.config/nvim/lua/plugins/.zshrc
	*	1760605423	0
	"	1	0

> ~/.config/nvim/lua/plugins/lsp.lua
	*	1760603853	0
	"	97	0
	^	97	1
	.	97	0
	+	1	37
	+	1	20
	+	1	8
	+	97	0

> ~/.config/nvim/lua/plugins/snippets.lua
	*	1760603360	0
	"	10	0
	^	10	1
	.	10	0
	+	1	42
	+	1	8
	+	10	0

> ~/.config/nvim/lua/plugins/completion.lua
	*	1760603345	0
	"	39	0
	^	39	1
	.	39	0
	+	1	44
	+	1	8
	+	39	0

> ~/.config/nvim/lua/plugins/statusline.lua
	*	1760601358	0
	"	48	0
	^	48	1
	.	48	0
	+	48	0

> ~/t.sh
	*	1760598407	0
	"	33	0
	.	33	0
	+	61	59
	+	10	30
	+	32	46
	+	10	0
	+	33	0

> ~/.config/nvim/lua/core/keymaps.lua
	*	1760597925	0
	"	13	0
	^	16	0
	.	15	56
	+	15	56

> ~/.config/nvim/lua/core/options.lua
	*	1760597911	0
	"	20	0
	^	20	0
	.	19	18
	+	19	18

> ~/nvim-config/nvim/init.lua
	*	1760596012	0
	"	81	0
	^	81	0
	.	80	58
	+	1	49
	+	80	58

> ~/nvim-config/nvim/lua/core/plugins.lua
	*	1760595876	0
	"	37	0
	^	37	0
	.	36	8
	+	1	49
	+	36	8

> ~/nvim-config/setup.nvim.sh
	*	1760595769	0
	"	90	0
	^	90	0
	.	89	38
	+	1	11
	+	1	19
	+	1	54
	+	1	0
	+	1	19
	+	89	38

> ~/nvim-config/nvim/lua/utils.lua
	*	1760595708	0
	"	61	0
	^	61	0
	.	60	8
	+	60	8

> ~/nvim-config/nvim/lua/ui.lua
	*	1760595599	0
	"	60	0
	^	60	0
	.	59	3
	+	59	3

> ~/nvim-config/nvim/lua/plugins/snippets.lua
	*	1760595568	0
	"	34	0
	^	34	0
	.	33	2
	+	33	2

> ~/nvim-config/nvim/lua/plugins/completion.lua
	*	1760595480	0
	"	63	0
	^	63	0
	.	62	2
	+	62	2

> ~/nvim-config/nvim/lua/plugins/lsp.lua
	*	1760595435	0
	"	78	0
	^	78	0
	.	77	2
	+	1	49
	+	77	2

> ~/nvim-config/nvim/lua/plugins/airline.lua
	*	1760595396	0
	"	35	0
	^	35	0
	.	34	1
	+	34	1

> ~/nvim-config/nvim/lua/plugins/colorscheme.lua
	*	1760595379	0
	"	36	0
	^	36	0
	.	35	31
	+	35	31

> ~/nvim-config/nvim/lua/core/keymaps.lua
	*	1760595343	0
	"	40	0
	^	40	0
	.	39	36
	+	1	49
	+	39	36

> ~/nvim-config/nvim/lua/core/options.lua
	*	1760595329	0
	"	46	0
	^	46	0
	.	45	53
	+	1	49
	+	45	53

> ~/Fitness-tools/Data/Zone2/zone2_data_loader.py
	*	1760594944	0
	"	1	0
	.	24	58
	+	54	7
	+	55	7
	+	56	0
	+	23	68
	+	7	28
	+	22	0
	+	25	0
	+	24	92
	+	23	0
	+	25	0
	+	24	58

> ~/nvim-config/nvim/lua/plugins/ui.lua
	*	1760594567	0
	"	48	0
	^	48	0
	.	47	1
	+	47	1

> ~/nvim-config/nvim/lua/plugins/init.lua
	*	1760594550	0
	"	11	0
	^	11	0
	.	10	2
	+	10	2

> ~/nvim-config/nvim/setup.nvim.sh
	*	1760594302	0
	"	1	0

> ~/nvim-config/README.md
	*	1760593824	0
	"	22	0
	^	22	0
	.	21	15
	+	21	15

> ~/Fitness-tools/Python-Progs/Zone2-HR-Analysis/hrZ2Lplot.py
	*	1760592461	0
	"	14	92
	.	19	99
	+	7	154
	+	7	136
	+	7	141
	+	7	137
	+	7	138
	+	7	18
	+	7	23
	+	7	28
	+	7	33
	+	7	38
	+	7	43
	+	7	48
	+	7	53
	+	7	58
	+	7	63
	+	7	68
	+	7	73
	+	7	78
	+	7	83
	+	7	88
	+	7	93
	+	7	98
	+	7	103
	+	7	108
	+	7	113
	+	7	118
	+	7	123
	+	7	128
	+	7	133
	+	7	138
	+	7	140
	+	7	0
	+	19	99

> ~/incline_data_load.py
	*	1760440845	0
	"	1	0

> ~/Fitness-tools/Data/Incline/incline-summary-dl.py
	*	1760420740	0
	"	1	1
	.	14	0
	+	14	0

> ~/Fitness-tools/Data/MetrixFlow/metrixflow_data_loader.py
	*	1760337930	0
	"	18	81
	^	18	82
	.	18	81
	+	1	62
	+	1	0
	+	1	9
	+	69	48
	+	20	58
	+	6	28
	+	19	47
	+	16	0
	+	17	0
	+	18	0
	+	19	0
	+	20	0
	+	18	81

> ~/Fitness-tools/Data/Zone2/downloads/zone2_data_loader.py
	*	1760337797	0
	"	1	0

> ~/Fitness-tools/Python-Progs/Zone2-HR-Analysis/hr-dashboard.py
	*	1760265490	0
	"	1539	0
	^	1542	1
	.	1542	0
	+	1	22
	+	1542	0

> ~/Fitness-tools/Python-Progs/Zone2-HR-Analysis/.vimrc
	*	1760244933	0
	"	1	0

> ~/hr-dashboard.py
	*	1760243915	0
	"	1	0

> /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/colortest.vim
	*	1760243290	0
	"	53	0

> ~/option-window
	*	1760243288	0
	"	1	0
	.	1086	0
	+	1086	0

> ~/.vim/autoload/plug.vim
	*	1760242902	0
	"	37	0

> ~/.vimrc.local
	*	1760242364	0
	"	1	0

> ~/Github-instructions.txt
	*	1760165687	0
	"	21	70
	^	21	71
	.	21	70
	+	21	70

> ~/Fitness-tools/Python-Progs/Data/MetrixFlow/metrixflow_data_loader.py
	*	1760164645	0
	"	9	18
	^	9	19
	.	9	18
	+	11	15
	+	12	13
	+	13	0
	+	9	62
	+	9	61
	+	9	63
	+	9	62
	+	10	0
	+	9	18
	+	8	33
	+	9	18
	+	9	62
	+	9	18
	+	9	63
	+	9	62
	+	10	0
	+	9	18

> ~/Fitness-tools/Python-Progs/Data/Zone2/zone2_data_loader.py
	*	1760163662	0
	"	21	58
	^	21	59
	.	21	58
	+	1	0
	+	1	9
	+	60	48
	+	21	58

> ~/Fitness-tools/Python-Progs/Data/Incline/t.py
	*	1760162741	0
	"	7	33
	^	7	34
	.	7	33
	+	1	42
	+	1	14
	+	38	63
	+	7	33

> ~/Fitness-tools/Python-Progs/Data/Incline/incline_data_load.py
	*	1760162625	0
	"	41	0
	^	9	34
	.	9	33
	+	58	48
	+	9	33

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_data_loader.py
	*	1760161686	0
	"	23	0
	.	20	0
	+	90	10
	+	20	0
	+	13	123
	+	20	0
	+	13	124
	+	20	0
	+	20	123
	+	20	0
	+	15	121
	+	14	0
	+	14	122
	+	15	122
	+	14	18
	+	14	142
	+	15	17
	+	15	141
	+	20	0
	+	14	3
	+	13	11
	+	15	3
	+	16	122
	+	16	8
	+	17	4
	+	20	13
	+	17	135
	+	18	139
	+	20	144
	+	16	0
	+	17	0
	+	18	0
	+	20	0
	+	17	16
	+	18	16
	+	20	21
	+	17	13
	+	18	9
	+	20	14
	+	18	0
	+	17	138
	+	16	132
	+	16	11
	+	16	134
	+	16	3
	+	17	3
	+	18	15
	+	20	0
	+	18	142
	+	20	20
	+	20	0
	+	20	147
	+	20	0
	+	19	0
	+	20	0

> ~/Fitness-tools/Python-Progs/pyHR_Analysis/hr-dashboard.py
	*	1760095870	0
	"	1540	0
	^	1540	1
	.	1540	0
	+	1	22
	+	1	0
	+	1	51
	+	1	50
	+	1	0
	+	1	38
	+	1	0
	+	1	1
	+	1	0
	+	1	14
	+	1	0
	+	1	22
	+	1884	0
	+	1	1
	+	1	0
	+	1	1
	+	1	57
	+	1	46
	+	1	73
	+	1	0
	+	1	41
	+	1	70
	+	1	22
	+	1	0
	+	1	22
	+	1540	0

> ~/Fitness-tools/Python-Progs/pyDashboard/prepare_data.py
	*	1760094737	0
	"	33	0

> ~/Fitness-tools/Python-Progs/pyHR_Analysis/hr-analysis.py
	*	1760075343	0
	"	1	0
	^	349	54
	.	349	53
	+	1	19
	+	1	95
	+	1	19
	+	1	58
	+	1	33
	+	1	19
	+	1	58
	+	1	19
	+	1	53
	+	1	19
	+	1	53
	+	1	19
	+	349	53

> ~/Fitness-tools/Python-Progs/pyHR_Analysis/t
	*	1760071029	0
	"	1	0
	^	265	18
	.	265	17
	+	354	0
	+	6	0
	+	32	0
	+	33	0
	+	34	0
	+	38	0
	+	39	0
	+	40	0
	+	46	0
	+	47	0
	+	110	0
	+	111	0
	+	181	0
	+	182	0
	+	189	0
	+	191	0
	+	193	0
	+	196	0
	+	197	0
	+	217	0
	+	218	0
	+	225	0
	+	227	0
	+	228	0
	+	268	0
	+	270	0
	+	304	0
	+	305	0
	+	328	40
	+	2	8
	+	5	25
	+	9	16
	+	169	22
	+	267	29
	+	274	37
	+	265	17

> ~/Fitness-tools/Python-Progs/pyHR_Analysis/hrZ2SPlot.py
	*	1760068009	0
	"	20	99
	^	7	84
	.	20	99
	+	15	92
	+	12	0
	+	16	0
	+	12	0
	+	7	92
	+	7	91
	+	7	93
	+	7	92
	+	7	94
	+	7	87
	+	7	18
	+	7	23
	+	7	28
	+	7	33
	+	7	38
	+	7	43
	+	7	48
	+	7	53
	+	7	58
	+	7	63
	+	7	68
	+	7	73
	+	7	78
	+	7	83
	+	7	88
	+	7	94
	+	8	0
	+	20	99
	+	7	88
	+	7	83
	+	7	88
	+	7	18
	+	7	22
	+	7	26
	+	7	30
	+	7	34
	+	7	39
	+	7	44
	+	7	49
	+	7	54
	+	7	59
	+	7	64
	+	7	69
	+	7	74
	+	7	79
	+	7	84
	+	7	88
	+	8	0
	+	20	99

> ~/Fitness-tools/Python-Progs/pyHR_Analysis/hr_data.csv
	*	1759991778	0
	"	1	0

> ~/Fitness-tools/Python-Progs/pyHR_Analysis/hrZ2Plot_all.py
	*	1759991214	0
	"	1	0

> ~/Fitness-tools/Python-Progs/pyHR_Analysis/hrZ2Lplot.py
	*	1759990731	0
	"	19	99
	^	19	100
	.	19	99
	+	5	22
	+	23	14
	+	5	22
	+	23	14
	+	13	18
	+	14	19
	+	13	74
	+	14	85
	+	8	0
	+	7	137
	+	8	0
	+	7	139
	+	1	0
	+	7	138
	+	7	19
	+	7	24
	+	7	29
	+	7	34
	+	7	39
	+	7	44
	+	7	49
	+	7	54
	+	7	59
	+	7	64
	+	7	69
	+	7	74
	+	7	79
	+	7	84
	+	7	89
	+	7	94
	+	7	99
	+	7	104
	+	7	109
	+	7	114
	+	7	119
	+	7	124
	+	7	129
	+	7	134
	+	7	138
	+	8	0
	+	19	99

> ~/Fitness-tools/Python-Progs/Workout-Sleep/tt.py
	*	1759920298	0
	"	1	0
	.	1	0
	+	1	0
	+	1	82
	+	1	0

> ~/Fitness-tools/Python-Progs/Workout-Sleep/t.py
	*	1759919231	0
	"	1	0
	^	195	0
	.	194	31
	+	1	0
	+	1	17
	+	1	0
	+	1	79
	+	1	19
	+	194	31

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_dashboard_v3.py
	*	1759846617	0
	"	552	9
	^	552	10
	.	552	9
	+	1	0
	+	1	31
	+	1	40
	+	1	10
	+	1	0
	+	1	78
	+	1	0
	+	1	28
	+	1	0
	+	1	50
	+	1	0
	+	1	40
	+	1	9
	+	1	64
	+	1	51
	+	1	64
	+	1	0
	+	1	63
	+	1	46
	+	1	41
	+	1	44
	+	1	42
	+	1	28
	+	1	40
	+	552	9

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_dashboard_v2.py
	*	1759844514	0
	"	99	0
	^	681	10
	.	681	9
	+	1	9
	+	1	0
	+	1	31
	+	1	0
	+	1	40
	+	681	9

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_dashboard_Deepseek.py
	*	1759842031	0
	"	190	0
	.	190	0
	+	1	0
	+	1	53
	+	1	0
	+	1	49
	+	1	41
	+	1	84
	+	1	86
	+	1	0
	+	1	99
	+	1	0
	+	1	84
	+	1	0
	+	1	4
	+	1	40
	+	820	38
	+	190	0
	+	189	31
	+	190	0

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/t.py
	*	1759828011	0
	"	745	38
	^	745	39
	.	745	38
	+	764	14
	+	753	61
	+	759	27
	+	745	38

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_dashboard_nextgen.py
	*	1759825200	0
	"	1	0
	.	454	0
	+	1	240
	+	1	31
	+	1	250
	+	1	30
	+	1	0
	+	1	10
	+	1	0
	+	1	29
	+	1	0
	+	1	36
	+	1	0
	+	1	31
	+	1	238
	+	1	31
	+	1	152
	+	1	40
	+	1	180
	+	1	0
	+	1	54
	+	1	0
	+	1	54
	+	1	0
	+	1	32
	+	1	22
	+	1	31
	+	1	19
	+	1	16
	+	1	0
	+	1	104
	+	1	0
	+	1	31
	+	1	42
	+	1	0
	+	1	18
	+	1	0
	+	1	24
	+	1	1
	+	1	0
	+	1	43
	+	1	0
	+	1	49
	+	1	0
	+	1	24
	+	1	82
	+	1	19
	+	1	31
	+	1	10
	+	1	19
	+	1	40
	+	453	180
	+	454	0

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/tt.py
	*	1759825118	0
	"	5	0
	^	745	39
	.	745	38
	+	745	38

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_dashboard_nextgen.py-CHATGPT
	*	1759824934	0
	"	371	0
	^	371	0
	.	370	114
	+	370	114

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_data_cleaner.py
	*	1759823458	0
	"	1	0
	^	22	39
	.	22	38
	+	1	23
	+	238	10
	+	22	38

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/theme.css
	*	1759822602	0
	"	28	0
	^	28	0
	.	27	1
	+	27	1

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_efficiency.py
	*	1759822324	0
	"	1	0
	^	99	0
	.	98	10
	+	98	10

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2_dashboard.py
	*	1759819798	0
	"	97	0
	^	97	0
	.	96	22
	+	1	20
	+	1	132
	+	1	19
	+	1	95
	+	1	19
	+	96	22

> ~/Fitness-tools/Python-Progs/Zone2_Efficiency/zone2efficiency.json
	*	1759818099	0
	"	1	0

> ~/Fitness-tools/workout-sleep-tracker/node_modules/lucide-react/dist/esm/icons/banana.js
	*	1759678961	0
	"	1	0
	.	1	0
	+	1	0

> ~/Fitness-tools/workout-sleep-tracker/src/components/layout/Header.tsx
	*	1759646530	0
	"	94	31
	^	94	32
	.	94	32
	+	1	35
	+	1	21
	+	1	35
	+	1	21
	+	1	35
	+	125	21
	+	84	33
	+	94	32

> ~/Fitness-tools/workout-sleep-tracker/src/pages/Dashboard.tsx
	*	1759646456	0
	"	276	10
	^	778	25
	.	276	10
	+	1	26
	+	778	24
	+	276	10

> ~/Fitness-tools/workout-sleep-tracker/src/routesConfig.tsx
	*	1759646428	0
	"	1	0
	^	18	0
	.	17	2
	+	1	23
	+	17	2

> ~/Fitness-tools/workout-sleep-tracker/src/main.tsx
	*	1759646420	0
	"	1	0
